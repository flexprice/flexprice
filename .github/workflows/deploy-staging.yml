name: Deploy to AWS Lambda

on:
  push:
    branches: [main] # TODO: Change to staging later

env:
  ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  LAMBDA_API_FUNCTION_NAME: ${{ vars.LAMBDA_API_FUNCTION_NAME }}
  LAMBDA_CONSUMER_FUNCTION_NAME: ${{ vars.LAMBDA_CONSUMER_FUNCTION_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.build.outputs.image_uri }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build and push image
      id: build
      env:
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      run: |        
        # Get commit hash
        COMMIT_HASH=$(git rev-parse --short HEAD)
        
        # Build full image URI
        IMAGE_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}:${COMMIT_HASH}"
        
        echo "Building image: ${IMAGE_URI}"
        
        # Build and push with specific platform
        docker buildx build \
          --platform linux/arm64 \
          --load \
          -t "${IMAGE_URI}" \
          -f Dockerfile.lambda .
        
        # Push the image
        docker push "${IMAGE_URI}"
        
        # Set output for other jobs
        echo "image_uri=${IMAGE_URI}" >> $GITHUB_OUTPUT

  deploy-api:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Update API Lambda
      env:
        IMAGE_URI: ${{ needs.build.outputs.image_uri }}
        FUNCTION_NAME: ${{ env.LAMBDA_API_FUNCTION_NAME }}
      run: |
        echo "Updating API Lambda..."
        aws lambda update-function-code \
          --function-name $FUNCTION_NAME \
          --image-uri $IMAGE_URI

  deploy-consumer:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Update Consumer Lambda
      env:
        IMAGE_URI: ${{ needs.build.outputs.image_uri }}
        FUNCTION_NAME: ${{ env.LAMBDA_CONSUMER_FUNCTION_NAME }}
      run: |
        echo "Updating Consumer Lambda..."
        aws lambda update-function-code \
          --function-name $FUNCTION_NAME \
          --image-uri $IMAGE_URI
