# Define platform
ARG TARGETPLATFORM=linux/arm64

# Build stage
FROM --platform=${TARGETPLATFORM} golang:1.23.3-alpine3.20 AS builder
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Add build optimization flags
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=arm64 \
    GO111MODULE=on \
    GOPROXY=direct

# Build the binary
RUN go build -ldflags="-w -s" -o bootstrap cmd/server/main.go

# Runtime stage
FROM --platform=${TARGETPLATFORM} public.ecr.aws/lambda/provided:al2023

# Copy binary
COPY --from=builder /app/bootstrap ${LAMBDA_RUNTIME_DIR}/bootstrap

# Copy config
COPY --from=builder /app/internal/config ./config

# Set execute permissions
RUN chmod +x ${LAMBDA_RUNTIME_DIR}/bootstrap

# The deployment mode will be set via environment variable in Lambda configuration
CMD ["bootstrap"]