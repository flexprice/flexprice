// Code generated by ent, DO NOT EDIT.

package alertlogs

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/flexprice/flexprice/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEnvironmentID, v))
}

// EntityType applies equality check predicate on the "entity_type" field. It's identical to EntityTypeEQ.
func EntityType(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEntityType, v))
}

// EntityID applies equality check predicate on the "entity_id" field. It's identical to EntityIDEQ.
func EntityID(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEntityID, v))
}

// ParentEntityType applies equality check predicate on the "parent_entity_type" field. It's identical to ParentEntityTypeEQ.
func ParentEntityType(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldParentEntityType, v))
}

// ParentEntityID applies equality check predicate on the "parent_entity_id" field. It's identical to ParentEntityIDEQ.
func ParentEntityID(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldParentEntityID, v))
}

// CustomerID applies equality check predicate on the "customer_id" field. It's identical to CustomerIDEQ.
func CustomerID(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCustomerID, v))
}

// AlertType applies equality check predicate on the "alert_type" field. It's identical to AlertTypeEQ.
func AlertType(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldAlertType, v))
}

// AlertStatus applies equality check predicate on the "alert_status" field. It's identical to AlertStatusEQ.
func AlertStatus(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldAlertStatus, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// EntityTypeEQ applies the EQ predicate on the "entity_type" field.
func EntityTypeEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEntityType, v))
}

// EntityTypeNEQ applies the NEQ predicate on the "entity_type" field.
func EntityTypeNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldEntityType, v))
}

// EntityTypeIn applies the In predicate on the "entity_type" field.
func EntityTypeIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldEntityType, vs...))
}

// EntityTypeNotIn applies the NotIn predicate on the "entity_type" field.
func EntityTypeNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldEntityType, vs...))
}

// EntityTypeGT applies the GT predicate on the "entity_type" field.
func EntityTypeGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldEntityType, v))
}

// EntityTypeGTE applies the GTE predicate on the "entity_type" field.
func EntityTypeGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldEntityType, v))
}

// EntityTypeLT applies the LT predicate on the "entity_type" field.
func EntityTypeLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldEntityType, v))
}

// EntityTypeLTE applies the LTE predicate on the "entity_type" field.
func EntityTypeLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldEntityType, v))
}

// EntityTypeContains applies the Contains predicate on the "entity_type" field.
func EntityTypeContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldEntityType, v))
}

// EntityTypeHasPrefix applies the HasPrefix predicate on the "entity_type" field.
func EntityTypeHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldEntityType, v))
}

// EntityTypeHasSuffix applies the HasSuffix predicate on the "entity_type" field.
func EntityTypeHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldEntityType, v))
}

// EntityTypeEqualFold applies the EqualFold predicate on the "entity_type" field.
func EntityTypeEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldEntityType, v))
}

// EntityTypeContainsFold applies the ContainsFold predicate on the "entity_type" field.
func EntityTypeContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldEntityType, v))
}

// EntityIDEQ applies the EQ predicate on the "entity_id" field.
func EntityIDEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldEntityID, v))
}

// EntityIDNEQ applies the NEQ predicate on the "entity_id" field.
func EntityIDNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldEntityID, v))
}

// EntityIDIn applies the In predicate on the "entity_id" field.
func EntityIDIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldEntityID, vs...))
}

// EntityIDNotIn applies the NotIn predicate on the "entity_id" field.
func EntityIDNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldEntityID, vs...))
}

// EntityIDGT applies the GT predicate on the "entity_id" field.
func EntityIDGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldEntityID, v))
}

// EntityIDGTE applies the GTE predicate on the "entity_id" field.
func EntityIDGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldEntityID, v))
}

// EntityIDLT applies the LT predicate on the "entity_id" field.
func EntityIDLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldEntityID, v))
}

// EntityIDLTE applies the LTE predicate on the "entity_id" field.
func EntityIDLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldEntityID, v))
}

// EntityIDContains applies the Contains predicate on the "entity_id" field.
func EntityIDContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldEntityID, v))
}

// EntityIDHasPrefix applies the HasPrefix predicate on the "entity_id" field.
func EntityIDHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldEntityID, v))
}

// EntityIDHasSuffix applies the HasSuffix predicate on the "entity_id" field.
func EntityIDHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldEntityID, v))
}

// EntityIDEqualFold applies the EqualFold predicate on the "entity_id" field.
func EntityIDEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldEntityID, v))
}

// EntityIDContainsFold applies the ContainsFold predicate on the "entity_id" field.
func EntityIDContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldEntityID, v))
}

// ParentEntityTypeEQ applies the EQ predicate on the "parent_entity_type" field.
func ParentEntityTypeEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldParentEntityType, v))
}

// ParentEntityTypeNEQ applies the NEQ predicate on the "parent_entity_type" field.
func ParentEntityTypeNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldParentEntityType, v))
}

// ParentEntityTypeIn applies the In predicate on the "parent_entity_type" field.
func ParentEntityTypeIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldParentEntityType, vs...))
}

// ParentEntityTypeNotIn applies the NotIn predicate on the "parent_entity_type" field.
func ParentEntityTypeNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldParentEntityType, vs...))
}

// ParentEntityTypeGT applies the GT predicate on the "parent_entity_type" field.
func ParentEntityTypeGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldParentEntityType, v))
}

// ParentEntityTypeGTE applies the GTE predicate on the "parent_entity_type" field.
func ParentEntityTypeGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldParentEntityType, v))
}

// ParentEntityTypeLT applies the LT predicate on the "parent_entity_type" field.
func ParentEntityTypeLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldParentEntityType, v))
}

// ParentEntityTypeLTE applies the LTE predicate on the "parent_entity_type" field.
func ParentEntityTypeLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldParentEntityType, v))
}

// ParentEntityTypeContains applies the Contains predicate on the "parent_entity_type" field.
func ParentEntityTypeContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldParentEntityType, v))
}

// ParentEntityTypeHasPrefix applies the HasPrefix predicate on the "parent_entity_type" field.
func ParentEntityTypeHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldParentEntityType, v))
}

// ParentEntityTypeHasSuffix applies the HasSuffix predicate on the "parent_entity_type" field.
func ParentEntityTypeHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldParentEntityType, v))
}

// ParentEntityTypeIsNil applies the IsNil predicate on the "parent_entity_type" field.
func ParentEntityTypeIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldParentEntityType))
}

// ParentEntityTypeNotNil applies the NotNil predicate on the "parent_entity_type" field.
func ParentEntityTypeNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldParentEntityType))
}

// ParentEntityTypeEqualFold applies the EqualFold predicate on the "parent_entity_type" field.
func ParentEntityTypeEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldParentEntityType, v))
}

// ParentEntityTypeContainsFold applies the ContainsFold predicate on the "parent_entity_type" field.
func ParentEntityTypeContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldParentEntityType, v))
}

// ParentEntityIDEQ applies the EQ predicate on the "parent_entity_id" field.
func ParentEntityIDEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldParentEntityID, v))
}

// ParentEntityIDNEQ applies the NEQ predicate on the "parent_entity_id" field.
func ParentEntityIDNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldParentEntityID, v))
}

// ParentEntityIDIn applies the In predicate on the "parent_entity_id" field.
func ParentEntityIDIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldParentEntityID, vs...))
}

// ParentEntityIDNotIn applies the NotIn predicate on the "parent_entity_id" field.
func ParentEntityIDNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldParentEntityID, vs...))
}

// ParentEntityIDGT applies the GT predicate on the "parent_entity_id" field.
func ParentEntityIDGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldParentEntityID, v))
}

// ParentEntityIDGTE applies the GTE predicate on the "parent_entity_id" field.
func ParentEntityIDGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldParentEntityID, v))
}

// ParentEntityIDLT applies the LT predicate on the "parent_entity_id" field.
func ParentEntityIDLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldParentEntityID, v))
}

// ParentEntityIDLTE applies the LTE predicate on the "parent_entity_id" field.
func ParentEntityIDLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldParentEntityID, v))
}

// ParentEntityIDContains applies the Contains predicate on the "parent_entity_id" field.
func ParentEntityIDContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldParentEntityID, v))
}

// ParentEntityIDHasPrefix applies the HasPrefix predicate on the "parent_entity_id" field.
func ParentEntityIDHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldParentEntityID, v))
}

// ParentEntityIDHasSuffix applies the HasSuffix predicate on the "parent_entity_id" field.
func ParentEntityIDHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldParentEntityID, v))
}

// ParentEntityIDIsNil applies the IsNil predicate on the "parent_entity_id" field.
func ParentEntityIDIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldParentEntityID))
}

// ParentEntityIDNotNil applies the NotNil predicate on the "parent_entity_id" field.
func ParentEntityIDNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldParentEntityID))
}

// ParentEntityIDEqualFold applies the EqualFold predicate on the "parent_entity_id" field.
func ParentEntityIDEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldParentEntityID, v))
}

// ParentEntityIDContainsFold applies the ContainsFold predicate on the "parent_entity_id" field.
func ParentEntityIDContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldParentEntityID, v))
}

// CustomerIDEQ applies the EQ predicate on the "customer_id" field.
func CustomerIDEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldCustomerID, v))
}

// CustomerIDNEQ applies the NEQ predicate on the "customer_id" field.
func CustomerIDNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldCustomerID, v))
}

// CustomerIDIn applies the In predicate on the "customer_id" field.
func CustomerIDIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldCustomerID, vs...))
}

// CustomerIDNotIn applies the NotIn predicate on the "customer_id" field.
func CustomerIDNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldCustomerID, vs...))
}

// CustomerIDGT applies the GT predicate on the "customer_id" field.
func CustomerIDGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldCustomerID, v))
}

// CustomerIDGTE applies the GTE predicate on the "customer_id" field.
func CustomerIDGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldCustomerID, v))
}

// CustomerIDLT applies the LT predicate on the "customer_id" field.
func CustomerIDLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldCustomerID, v))
}

// CustomerIDLTE applies the LTE predicate on the "customer_id" field.
func CustomerIDLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldCustomerID, v))
}

// CustomerIDContains applies the Contains predicate on the "customer_id" field.
func CustomerIDContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldCustomerID, v))
}

// CustomerIDHasPrefix applies the HasPrefix predicate on the "customer_id" field.
func CustomerIDHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldCustomerID, v))
}

// CustomerIDHasSuffix applies the HasSuffix predicate on the "customer_id" field.
func CustomerIDHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldCustomerID, v))
}

// CustomerIDIsNil applies the IsNil predicate on the "customer_id" field.
func CustomerIDIsNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIsNull(FieldCustomerID))
}

// CustomerIDNotNil applies the NotNil predicate on the "customer_id" field.
func CustomerIDNotNil() predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotNull(FieldCustomerID))
}

// CustomerIDEqualFold applies the EqualFold predicate on the "customer_id" field.
func CustomerIDEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldCustomerID, v))
}

// CustomerIDContainsFold applies the ContainsFold predicate on the "customer_id" field.
func CustomerIDContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldCustomerID, v))
}

// AlertTypeEQ applies the EQ predicate on the "alert_type" field.
func AlertTypeEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldAlertType, v))
}

// AlertTypeNEQ applies the NEQ predicate on the "alert_type" field.
func AlertTypeNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldAlertType, v))
}

// AlertTypeIn applies the In predicate on the "alert_type" field.
func AlertTypeIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldAlertType, vs...))
}

// AlertTypeNotIn applies the NotIn predicate on the "alert_type" field.
func AlertTypeNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldAlertType, vs...))
}

// AlertTypeGT applies the GT predicate on the "alert_type" field.
func AlertTypeGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldAlertType, v))
}

// AlertTypeGTE applies the GTE predicate on the "alert_type" field.
func AlertTypeGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldAlertType, v))
}

// AlertTypeLT applies the LT predicate on the "alert_type" field.
func AlertTypeLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldAlertType, v))
}

// AlertTypeLTE applies the LTE predicate on the "alert_type" field.
func AlertTypeLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldAlertType, v))
}

// AlertTypeContains applies the Contains predicate on the "alert_type" field.
func AlertTypeContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldAlertType, v))
}

// AlertTypeHasPrefix applies the HasPrefix predicate on the "alert_type" field.
func AlertTypeHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldAlertType, v))
}

// AlertTypeHasSuffix applies the HasSuffix predicate on the "alert_type" field.
func AlertTypeHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldAlertType, v))
}

// AlertTypeEqualFold applies the EqualFold predicate on the "alert_type" field.
func AlertTypeEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldAlertType, v))
}

// AlertTypeContainsFold applies the ContainsFold predicate on the "alert_type" field.
func AlertTypeContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldAlertType, v))
}

// AlertStatusEQ applies the EQ predicate on the "alert_status" field.
func AlertStatusEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEQ(FieldAlertStatus, v))
}

// AlertStatusNEQ applies the NEQ predicate on the "alert_status" field.
func AlertStatusNEQ(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNEQ(FieldAlertStatus, v))
}

// AlertStatusIn applies the In predicate on the "alert_status" field.
func AlertStatusIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldIn(FieldAlertStatus, vs...))
}

// AlertStatusNotIn applies the NotIn predicate on the "alert_status" field.
func AlertStatusNotIn(vs ...string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldNotIn(FieldAlertStatus, vs...))
}

// AlertStatusGT applies the GT predicate on the "alert_status" field.
func AlertStatusGT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGT(FieldAlertStatus, v))
}

// AlertStatusGTE applies the GTE predicate on the "alert_status" field.
func AlertStatusGTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldGTE(FieldAlertStatus, v))
}

// AlertStatusLT applies the LT predicate on the "alert_status" field.
func AlertStatusLT(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLT(FieldAlertStatus, v))
}

// AlertStatusLTE applies the LTE predicate on the "alert_status" field.
func AlertStatusLTE(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldLTE(FieldAlertStatus, v))
}

// AlertStatusContains applies the Contains predicate on the "alert_status" field.
func AlertStatusContains(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContains(FieldAlertStatus, v))
}

// AlertStatusHasPrefix applies the HasPrefix predicate on the "alert_status" field.
func AlertStatusHasPrefix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasPrefix(FieldAlertStatus, v))
}

// AlertStatusHasSuffix applies the HasSuffix predicate on the "alert_status" field.
func AlertStatusHasSuffix(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldHasSuffix(FieldAlertStatus, v))
}

// AlertStatusEqualFold applies the EqualFold predicate on the "alert_status" field.
func AlertStatusEqualFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldEqualFold(FieldAlertStatus, v))
}

// AlertStatusContainsFold applies the ContainsFold predicate on the "alert_status" field.
func AlertStatusContainsFold(v string) predicate.AlertLogs {
	return predicate.AlertLogs(sql.FieldContainsFold(FieldAlertStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AlertLogs) predicate.AlertLogs {
	return predicate.AlertLogs(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AlertLogs) predicate.AlertLogs {
	return predicate.AlertLogs(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AlertLogs) predicate.AlertLogs {
	return predicate.AlertLogs(sql.NotPredicates(p))
}
