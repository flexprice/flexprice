// Code generated by ent, DO NOT EDIT.

package creditnotelineitem

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/flexprice/flexprice/ent/predicate"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldEnvironmentID, v))
}

// CreditNoteID applies equality check predicate on the "credit_note_id" field. It's identical to CreditNoteIDEQ.
func CreditNoteID(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreditNoteID, v))
}

// InvoiceLineItemID applies equality check predicate on the "invoice_line_item_id" field. It's identical to InvoiceLineItemIDEQ.
func InvoiceLineItemID(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldInvoiceLineItemID, v))
}

// DisplayName applies equality check predicate on the "display_name" field. It's identical to DisplayNameEQ.
func DisplayName(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldDisplayName, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldAmount, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCurrency, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// CreditNoteIDEQ applies the EQ predicate on the "credit_note_id" field.
func CreditNoteIDEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCreditNoteID, v))
}

// CreditNoteIDNEQ applies the NEQ predicate on the "credit_note_id" field.
func CreditNoteIDNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldCreditNoteID, v))
}

// CreditNoteIDIn applies the In predicate on the "credit_note_id" field.
func CreditNoteIDIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldCreditNoteID, vs...))
}

// CreditNoteIDNotIn applies the NotIn predicate on the "credit_note_id" field.
func CreditNoteIDNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldCreditNoteID, vs...))
}

// CreditNoteIDGT applies the GT predicate on the "credit_note_id" field.
func CreditNoteIDGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldCreditNoteID, v))
}

// CreditNoteIDGTE applies the GTE predicate on the "credit_note_id" field.
func CreditNoteIDGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldCreditNoteID, v))
}

// CreditNoteIDLT applies the LT predicate on the "credit_note_id" field.
func CreditNoteIDLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldCreditNoteID, v))
}

// CreditNoteIDLTE applies the LTE predicate on the "credit_note_id" field.
func CreditNoteIDLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldCreditNoteID, v))
}

// CreditNoteIDContains applies the Contains predicate on the "credit_note_id" field.
func CreditNoteIDContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldCreditNoteID, v))
}

// CreditNoteIDHasPrefix applies the HasPrefix predicate on the "credit_note_id" field.
func CreditNoteIDHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldCreditNoteID, v))
}

// CreditNoteIDHasSuffix applies the HasSuffix predicate on the "credit_note_id" field.
func CreditNoteIDHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldCreditNoteID, v))
}

// CreditNoteIDEqualFold applies the EqualFold predicate on the "credit_note_id" field.
func CreditNoteIDEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldCreditNoteID, v))
}

// CreditNoteIDContainsFold applies the ContainsFold predicate on the "credit_note_id" field.
func CreditNoteIDContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldCreditNoteID, v))
}

// InvoiceLineItemIDEQ applies the EQ predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDNEQ applies the NEQ predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDIn applies the In predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldInvoiceLineItemID, vs...))
}

// InvoiceLineItemIDNotIn applies the NotIn predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldInvoiceLineItemID, vs...))
}

// InvoiceLineItemIDGT applies the GT predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDGTE applies the GTE predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDLT applies the LT predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDLTE applies the LTE predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDContains applies the Contains predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDHasPrefix applies the HasPrefix predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDHasSuffix applies the HasSuffix predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDEqualFold applies the EqualFold predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldInvoiceLineItemID, v))
}

// InvoiceLineItemIDContainsFold applies the ContainsFold predicate on the "invoice_line_item_id" field.
func InvoiceLineItemIDContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldInvoiceLineItemID, v))
}

// DisplayNameEQ applies the EQ predicate on the "display_name" field.
func DisplayNameEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldDisplayName, v))
}

// DisplayNameNEQ applies the NEQ predicate on the "display_name" field.
func DisplayNameNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldDisplayName, v))
}

// DisplayNameIn applies the In predicate on the "display_name" field.
func DisplayNameIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldDisplayName, vs...))
}

// DisplayNameNotIn applies the NotIn predicate on the "display_name" field.
func DisplayNameNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldDisplayName, vs...))
}

// DisplayNameGT applies the GT predicate on the "display_name" field.
func DisplayNameGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldDisplayName, v))
}

// DisplayNameGTE applies the GTE predicate on the "display_name" field.
func DisplayNameGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldDisplayName, v))
}

// DisplayNameLT applies the LT predicate on the "display_name" field.
func DisplayNameLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldDisplayName, v))
}

// DisplayNameLTE applies the LTE predicate on the "display_name" field.
func DisplayNameLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldDisplayName, v))
}

// DisplayNameContains applies the Contains predicate on the "display_name" field.
func DisplayNameContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldDisplayName, v))
}

// DisplayNameHasPrefix applies the HasPrefix predicate on the "display_name" field.
func DisplayNameHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldDisplayName, v))
}

// DisplayNameHasSuffix applies the HasSuffix predicate on the "display_name" field.
func DisplayNameHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldDisplayName, v))
}

// DisplayNameEqualFold applies the EqualFold predicate on the "display_name" field.
func DisplayNameEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldDisplayName, v))
}

// DisplayNameContainsFold applies the ContainsFold predicate on the "display_name" field.
func DisplayNameContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldDisplayName, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v decimal.Decimal) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldAmount, v))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldContainsFold(FieldCurrency, v))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.FieldNotNull(FieldMetadata))
}

// HasCreditNote applies the HasEdge predicate on the "credit_note" edge.
func HasCreditNote() predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CreditNoteTable, CreditNoteColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCreditNoteWith applies the HasEdge predicate on the "credit_note" edge with a given conditions (other predicates).
func HasCreditNoteWith(preds ...predicate.CreditNote) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(func(s *sql.Selector) {
		step := newCreditNoteStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CreditNoteLineItem) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CreditNoteLineItem) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CreditNoteLineItem) predicate.CreditNoteLineItem {
	return predicate.CreditNoteLineItem(sql.NotPredicates(p))
}
