// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/flexprice/flexprice/ent/billingsequence"
	"github.com/flexprice/flexprice/ent/customer"
	"github.com/flexprice/flexprice/ent/entitlement"
	"github.com/flexprice/flexprice/ent/feature"
	"github.com/flexprice/flexprice/ent/invoice"
	"github.com/flexprice/flexprice/ent/invoicelineitem"
	"github.com/flexprice/flexprice/ent/invoicesequence"
	"github.com/flexprice/flexprice/ent/meter"
	"github.com/flexprice/flexprice/ent/payment"
	"github.com/flexprice/flexprice/ent/paymentattempt"
	"github.com/flexprice/flexprice/ent/plan"
	"github.com/flexprice/flexprice/ent/price"
	"github.com/flexprice/flexprice/ent/schema"
	"github.com/flexprice/flexprice/ent/subscription"
	"github.com/flexprice/flexprice/ent/subscriptionlineitem"
	"github.com/flexprice/flexprice/ent/task"
	"github.com/flexprice/flexprice/ent/wallet"
	"github.com/flexprice/flexprice/ent/wallettransaction"
	"github.com/shopspring/decimal"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	billingsequenceFields := schema.BillingSequence{}.Fields()
	_ = billingsequenceFields
	// billingsequenceDescTenantID is the schema descriptor for tenant_id field.
	billingsequenceDescTenantID := billingsequenceFields[0].Descriptor()
	// billingsequence.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	billingsequence.TenantIDValidator = billingsequenceDescTenantID.Validators[0].(func(string) error)
	// billingsequenceDescSubscriptionID is the schema descriptor for subscription_id field.
	billingsequenceDescSubscriptionID := billingsequenceFields[1].Descriptor()
	// billingsequence.SubscriptionIDValidator is a validator for the "subscription_id" field. It is called by the builders before save.
	billingsequence.SubscriptionIDValidator = billingsequenceDescSubscriptionID.Validators[0].(func(string) error)
	// billingsequenceDescLastSequence is the schema descriptor for last_sequence field.
	billingsequenceDescLastSequence := billingsequenceFields[2].Descriptor()
	// billingsequence.DefaultLastSequence holds the default value on creation for the last_sequence field.
	billingsequence.DefaultLastSequence = billingsequenceDescLastSequence.Default.(int)
	// billingsequenceDescCreatedAt is the schema descriptor for created_at field.
	billingsequenceDescCreatedAt := billingsequenceFields[3].Descriptor()
	// billingsequence.DefaultCreatedAt holds the default value on creation for the created_at field.
	billingsequence.DefaultCreatedAt = billingsequenceDescCreatedAt.Default.(func() time.Time)
	// billingsequenceDescUpdatedAt is the schema descriptor for updated_at field.
	billingsequenceDescUpdatedAt := billingsequenceFields[4].Descriptor()
	// billingsequence.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	billingsequence.DefaultUpdatedAt = billingsequenceDescUpdatedAt.Default.(func() time.Time)
	// billingsequence.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	billingsequence.UpdateDefaultUpdatedAt = billingsequenceDescUpdatedAt.UpdateDefault.(func() time.Time)
	customerMixin := schema.Customer{}.Mixin()
	customerMixinFields0 := customerMixin[0].Fields()
	_ = customerMixinFields0
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescTenantID is the schema descriptor for tenant_id field.
	customerDescTenantID := customerMixinFields0[0].Descriptor()
	// customer.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	customer.TenantIDValidator = customerDescTenantID.Validators[0].(func(string) error)
	// customerDescStatus is the schema descriptor for status field.
	customerDescStatus := customerMixinFields0[1].Descriptor()
	// customer.DefaultStatus holds the default value on creation for the status field.
	customer.DefaultStatus = customerDescStatus.Default.(string)
	// customerDescCreatedAt is the schema descriptor for created_at field.
	customerDescCreatedAt := customerMixinFields0[2].Descriptor()
	// customer.DefaultCreatedAt holds the default value on creation for the created_at field.
	customer.DefaultCreatedAt = customerDescCreatedAt.Default.(func() time.Time)
	// customerDescUpdatedAt is the schema descriptor for updated_at field.
	customerDescUpdatedAt := customerMixinFields0[3].Descriptor()
	// customer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	customer.DefaultUpdatedAt = customerDescUpdatedAt.Default.(func() time.Time)
	// customer.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	customer.UpdateDefaultUpdatedAt = customerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// customerDescExternalID is the schema descriptor for external_id field.
	customerDescExternalID := customerFields[1].Descriptor()
	// customer.ExternalIDValidator is a validator for the "external_id" field. It is called by the builders before save.
	customer.ExternalIDValidator = customerDescExternalID.Validators[0].(func(string) error)
	// customerDescName is the schema descriptor for name field.
	customerDescName := customerFields[2].Descriptor()
	// customer.NameValidator is a validator for the "name" field. It is called by the builders before save.
	customer.NameValidator = customerDescName.Validators[0].(func(string) error)
	entitlementMixin := schema.Entitlement{}.Mixin()
	entitlementMixinFields0 := entitlementMixin[0].Fields()
	_ = entitlementMixinFields0
	entitlementFields := schema.Entitlement{}.Fields()
	_ = entitlementFields
	// entitlementDescTenantID is the schema descriptor for tenant_id field.
	entitlementDescTenantID := entitlementMixinFields0[0].Descriptor()
	// entitlement.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	entitlement.TenantIDValidator = entitlementDescTenantID.Validators[0].(func(string) error)
	// entitlementDescStatus is the schema descriptor for status field.
	entitlementDescStatus := entitlementMixinFields0[1].Descriptor()
	// entitlement.DefaultStatus holds the default value on creation for the status field.
	entitlement.DefaultStatus = entitlementDescStatus.Default.(string)
	// entitlementDescCreatedAt is the schema descriptor for created_at field.
	entitlementDescCreatedAt := entitlementMixinFields0[2].Descriptor()
	// entitlement.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitlement.DefaultCreatedAt = entitlementDescCreatedAt.Default.(func() time.Time)
	// entitlementDescUpdatedAt is the schema descriptor for updated_at field.
	entitlementDescUpdatedAt := entitlementMixinFields0[3].Descriptor()
	// entitlement.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitlement.DefaultUpdatedAt = entitlementDescUpdatedAt.Default.(func() time.Time)
	// entitlement.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitlement.UpdateDefaultUpdatedAt = entitlementDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitlementDescPlanID is the schema descriptor for plan_id field.
	entitlementDescPlanID := entitlementFields[1].Descriptor()
	// entitlement.PlanIDValidator is a validator for the "plan_id" field. It is called by the builders before save.
	entitlement.PlanIDValidator = entitlementDescPlanID.Validators[0].(func(string) error)
	// entitlementDescFeatureID is the schema descriptor for feature_id field.
	entitlementDescFeatureID := entitlementFields[2].Descriptor()
	// entitlement.FeatureIDValidator is a validator for the "feature_id" field. It is called by the builders before save.
	entitlement.FeatureIDValidator = entitlementDescFeatureID.Validators[0].(func(string) error)
	// entitlementDescFeatureType is the schema descriptor for feature_type field.
	entitlementDescFeatureType := entitlementFields[3].Descriptor()
	// entitlement.FeatureTypeValidator is a validator for the "feature_type" field. It is called by the builders before save.
	entitlement.FeatureTypeValidator = entitlementDescFeatureType.Validators[0].(func(string) error)
	// entitlementDescIsEnabled is the schema descriptor for is_enabled field.
	entitlementDescIsEnabled := entitlementFields[4].Descriptor()
	// entitlement.DefaultIsEnabled holds the default value on creation for the is_enabled field.
	entitlement.DefaultIsEnabled = entitlementDescIsEnabled.Default.(bool)
	// entitlementDescIsSoftLimit is the schema descriptor for is_soft_limit field.
	entitlementDescIsSoftLimit := entitlementFields[7].Descriptor()
	// entitlement.DefaultIsSoftLimit holds the default value on creation for the is_soft_limit field.
	entitlement.DefaultIsSoftLimit = entitlementDescIsSoftLimit.Default.(bool)
	// entitlementDescID is the schema descriptor for id field.
	entitlementDescID := entitlementFields[0].Descriptor()
	// entitlement.IDValidator is a validator for the "id" field. It is called by the builders before save.
	entitlement.IDValidator = entitlementDescID.Validators[0].(func(string) error)
	featureMixin := schema.Feature{}.Mixin()
	featureMixinFields0 := featureMixin[0].Fields()
	_ = featureMixinFields0
	featureFields := schema.Feature{}.Fields()
	_ = featureFields
	// featureDescTenantID is the schema descriptor for tenant_id field.
	featureDescTenantID := featureMixinFields0[0].Descriptor()
	// feature.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	feature.TenantIDValidator = featureDescTenantID.Validators[0].(func(string) error)
	// featureDescStatus is the schema descriptor for status field.
	featureDescStatus := featureMixinFields0[1].Descriptor()
	// feature.DefaultStatus holds the default value on creation for the status field.
	feature.DefaultStatus = featureDescStatus.Default.(string)
	// featureDescCreatedAt is the schema descriptor for created_at field.
	featureDescCreatedAt := featureMixinFields0[2].Descriptor()
	// feature.DefaultCreatedAt holds the default value on creation for the created_at field.
	feature.DefaultCreatedAt = featureDescCreatedAt.Default.(func() time.Time)
	// featureDescUpdatedAt is the schema descriptor for updated_at field.
	featureDescUpdatedAt := featureMixinFields0[3].Descriptor()
	// feature.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	feature.DefaultUpdatedAt = featureDescUpdatedAt.Default.(func() time.Time)
	// feature.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	feature.UpdateDefaultUpdatedAt = featureDescUpdatedAt.UpdateDefault.(func() time.Time)
	// featureDescName is the schema descriptor for name field.
	featureDescName := featureFields[2].Descriptor()
	// feature.NameValidator is a validator for the "name" field. It is called by the builders before save.
	feature.NameValidator = featureDescName.Validators[0].(func(string) error)
	// featureDescType is the schema descriptor for type field.
	featureDescType := featureFields[4].Descriptor()
	// feature.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	feature.TypeValidator = featureDescType.Validators[0].(func(string) error)
	invoiceMixin := schema.Invoice{}.Mixin()
	invoiceMixinFields0 := invoiceMixin[0].Fields()
	_ = invoiceMixinFields0
	invoiceFields := schema.Invoice{}.Fields()
	_ = invoiceFields
	// invoiceDescTenantID is the schema descriptor for tenant_id field.
	invoiceDescTenantID := invoiceMixinFields0[0].Descriptor()
	// invoice.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	invoice.TenantIDValidator = invoiceDescTenantID.Validators[0].(func(string) error)
	// invoiceDescStatus is the schema descriptor for status field.
	invoiceDescStatus := invoiceMixinFields0[1].Descriptor()
	// invoice.DefaultStatus holds the default value on creation for the status field.
	invoice.DefaultStatus = invoiceDescStatus.Default.(string)
	// invoiceDescCreatedAt is the schema descriptor for created_at field.
	invoiceDescCreatedAt := invoiceMixinFields0[2].Descriptor()
	// invoice.DefaultCreatedAt holds the default value on creation for the created_at field.
	invoice.DefaultCreatedAt = invoiceDescCreatedAt.Default.(func() time.Time)
	// invoiceDescUpdatedAt is the schema descriptor for updated_at field.
	invoiceDescUpdatedAt := invoiceMixinFields0[3].Descriptor()
	// invoice.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invoice.DefaultUpdatedAt = invoiceDescUpdatedAt.Default.(func() time.Time)
	// invoice.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invoice.UpdateDefaultUpdatedAt = invoiceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// invoiceDescCustomerID is the schema descriptor for customer_id field.
	invoiceDescCustomerID := invoiceFields[1].Descriptor()
	// invoice.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	invoice.CustomerIDValidator = invoiceDescCustomerID.Validators[0].(func(string) error)
	// invoiceDescInvoiceType is the schema descriptor for invoice_type field.
	invoiceDescInvoiceType := invoiceFields[3].Descriptor()
	// invoice.InvoiceTypeValidator is a validator for the "invoice_type" field. It is called by the builders before save.
	invoice.InvoiceTypeValidator = invoiceDescInvoiceType.Validators[0].(func(string) error)
	// invoiceDescInvoiceStatus is the schema descriptor for invoice_status field.
	invoiceDescInvoiceStatus := invoiceFields[4].Descriptor()
	// invoice.DefaultInvoiceStatus holds the default value on creation for the invoice_status field.
	invoice.DefaultInvoiceStatus = invoiceDescInvoiceStatus.Default.(string)
	// invoiceDescPaymentStatus is the schema descriptor for payment_status field.
	invoiceDescPaymentStatus := invoiceFields[5].Descriptor()
	// invoice.DefaultPaymentStatus holds the default value on creation for the payment_status field.
	invoice.DefaultPaymentStatus = invoiceDescPaymentStatus.Default.(string)
	// invoiceDescCurrency is the schema descriptor for currency field.
	invoiceDescCurrency := invoiceFields[6].Descriptor()
	// invoice.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	invoice.CurrencyValidator = invoiceDescCurrency.Validators[0].(func(string) error)
	// invoiceDescAmountDue is the schema descriptor for amount_due field.
	invoiceDescAmountDue := invoiceFields[7].Descriptor()
	// invoice.DefaultAmountDue holds the default value on creation for the amount_due field.
	invoice.DefaultAmountDue = invoiceDescAmountDue.Default.(decimal.Decimal)
	// invoiceDescAmountPaid is the schema descriptor for amount_paid field.
	invoiceDescAmountPaid := invoiceFields[8].Descriptor()
	// invoice.DefaultAmountPaid holds the default value on creation for the amount_paid field.
	invoice.DefaultAmountPaid = invoiceDescAmountPaid.Default.(decimal.Decimal)
	// invoiceDescAmountRemaining is the schema descriptor for amount_remaining field.
	invoiceDescAmountRemaining := invoiceFields[9].Descriptor()
	// invoice.DefaultAmountRemaining holds the default value on creation for the amount_remaining field.
	invoice.DefaultAmountRemaining = invoiceDescAmountRemaining.Default.(decimal.Decimal)
	// invoiceDescVersion is the schema descriptor for version field.
	invoiceDescVersion := invoiceFields[21].Descriptor()
	// invoice.DefaultVersion holds the default value on creation for the version field.
	invoice.DefaultVersion = invoiceDescVersion.Default.(int)
	invoicelineitemMixin := schema.InvoiceLineItem{}.Mixin()
	invoicelineitemMixinFields0 := invoicelineitemMixin[0].Fields()
	_ = invoicelineitemMixinFields0
	invoicelineitemFields := schema.InvoiceLineItem{}.Fields()
	_ = invoicelineitemFields
	// invoicelineitemDescTenantID is the schema descriptor for tenant_id field.
	invoicelineitemDescTenantID := invoicelineitemMixinFields0[0].Descriptor()
	// invoicelineitem.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	invoicelineitem.TenantIDValidator = invoicelineitemDescTenantID.Validators[0].(func(string) error)
	// invoicelineitemDescStatus is the schema descriptor for status field.
	invoicelineitemDescStatus := invoicelineitemMixinFields0[1].Descriptor()
	// invoicelineitem.DefaultStatus holds the default value on creation for the status field.
	invoicelineitem.DefaultStatus = invoicelineitemDescStatus.Default.(string)
	// invoicelineitemDescCreatedAt is the schema descriptor for created_at field.
	invoicelineitemDescCreatedAt := invoicelineitemMixinFields0[2].Descriptor()
	// invoicelineitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	invoicelineitem.DefaultCreatedAt = invoicelineitemDescCreatedAt.Default.(func() time.Time)
	// invoicelineitemDescUpdatedAt is the schema descriptor for updated_at field.
	invoicelineitemDescUpdatedAt := invoicelineitemMixinFields0[3].Descriptor()
	// invoicelineitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invoicelineitem.DefaultUpdatedAt = invoicelineitemDescUpdatedAt.Default.(func() time.Time)
	// invoicelineitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invoicelineitem.UpdateDefaultUpdatedAt = invoicelineitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// invoicelineitemDescInvoiceID is the schema descriptor for invoice_id field.
	invoicelineitemDescInvoiceID := invoicelineitemFields[1].Descriptor()
	// invoicelineitem.InvoiceIDValidator is a validator for the "invoice_id" field. It is called by the builders before save.
	invoicelineitem.InvoiceIDValidator = invoicelineitemDescInvoiceID.Validators[0].(func(string) error)
	// invoicelineitemDescCustomerID is the schema descriptor for customer_id field.
	invoicelineitemDescCustomerID := invoicelineitemFields[2].Descriptor()
	// invoicelineitem.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	invoicelineitem.CustomerIDValidator = invoicelineitemDescCustomerID.Validators[0].(func(string) error)
	// invoicelineitemDescPriceID is the schema descriptor for price_id field.
	invoicelineitemDescPriceID := invoicelineitemFields[6].Descriptor()
	// invoicelineitem.PriceIDValidator is a validator for the "price_id" field. It is called by the builders before save.
	invoicelineitem.PriceIDValidator = invoicelineitemDescPriceID.Validators[0].(func(string) error)
	// invoicelineitemDescAmount is the schema descriptor for amount field.
	invoicelineitemDescAmount := invoicelineitemFields[11].Descriptor()
	// invoicelineitem.DefaultAmount holds the default value on creation for the amount field.
	invoicelineitem.DefaultAmount = invoicelineitemDescAmount.Default.(decimal.Decimal)
	// invoicelineitemDescQuantity is the schema descriptor for quantity field.
	invoicelineitemDescQuantity := invoicelineitemFields[12].Descriptor()
	// invoicelineitem.DefaultQuantity holds the default value on creation for the quantity field.
	invoicelineitem.DefaultQuantity = invoicelineitemDescQuantity.Default.(decimal.Decimal)
	// invoicelineitemDescCurrency is the schema descriptor for currency field.
	invoicelineitemDescCurrency := invoicelineitemFields[13].Descriptor()
	// invoicelineitem.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	invoicelineitem.CurrencyValidator = invoicelineitemDescCurrency.Validators[0].(func(string) error)
	invoicesequenceFields := schema.InvoiceSequence{}.Fields()
	_ = invoicesequenceFields
	// invoicesequenceDescTenantID is the schema descriptor for tenant_id field.
	invoicesequenceDescTenantID := invoicesequenceFields[0].Descriptor()
	// invoicesequence.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	invoicesequence.TenantIDValidator = invoicesequenceDescTenantID.Validators[0].(func(string) error)
	// invoicesequenceDescYearMonth is the schema descriptor for year_month field.
	invoicesequenceDescYearMonth := invoicesequenceFields[1].Descriptor()
	// invoicesequence.YearMonthValidator is a validator for the "year_month" field. It is called by the builders before save.
	invoicesequence.YearMonthValidator = invoicesequenceDescYearMonth.Validators[0].(func(string) error)
	// invoicesequenceDescLastValue is the schema descriptor for last_value field.
	invoicesequenceDescLastValue := invoicesequenceFields[2].Descriptor()
	// invoicesequence.DefaultLastValue holds the default value on creation for the last_value field.
	invoicesequence.DefaultLastValue = invoicesequenceDescLastValue.Default.(int64)
	// invoicesequenceDescCreatedAt is the schema descriptor for created_at field.
	invoicesequenceDescCreatedAt := invoicesequenceFields[3].Descriptor()
	// invoicesequence.DefaultCreatedAt holds the default value on creation for the created_at field.
	invoicesequence.DefaultCreatedAt = invoicesequenceDescCreatedAt.Default.(func() time.Time)
	// invoicesequenceDescUpdatedAt is the schema descriptor for updated_at field.
	invoicesequenceDescUpdatedAt := invoicesequenceFields[4].Descriptor()
	// invoicesequence.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invoicesequence.DefaultUpdatedAt = invoicesequenceDescUpdatedAt.Default.(func() time.Time)
	// invoicesequence.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invoicesequence.UpdateDefaultUpdatedAt = invoicesequenceDescUpdatedAt.UpdateDefault.(func() time.Time)
	meterMixin := schema.Meter{}.Mixin()
	meterMixinFields0 := meterMixin[0].Fields()
	_ = meterMixinFields0
	meterFields := schema.Meter{}.Fields()
	_ = meterFields
	// meterDescTenantID is the schema descriptor for tenant_id field.
	meterDescTenantID := meterMixinFields0[0].Descriptor()
	// meter.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	meter.TenantIDValidator = meterDescTenantID.Validators[0].(func(string) error)
	// meterDescStatus is the schema descriptor for status field.
	meterDescStatus := meterMixinFields0[1].Descriptor()
	// meter.DefaultStatus holds the default value on creation for the status field.
	meter.DefaultStatus = meterDescStatus.Default.(string)
	// meterDescCreatedAt is the schema descriptor for created_at field.
	meterDescCreatedAt := meterMixinFields0[2].Descriptor()
	// meter.DefaultCreatedAt holds the default value on creation for the created_at field.
	meter.DefaultCreatedAt = meterDescCreatedAt.Default.(func() time.Time)
	// meterDescUpdatedAt is the schema descriptor for updated_at field.
	meterDescUpdatedAt := meterMixinFields0[3].Descriptor()
	// meter.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	meter.DefaultUpdatedAt = meterDescUpdatedAt.Default.(func() time.Time)
	// meter.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	meter.UpdateDefaultUpdatedAt = meterDescUpdatedAt.UpdateDefault.(func() time.Time)
	// meterDescEventName is the schema descriptor for event_name field.
	meterDescEventName := meterFields[1].Descriptor()
	// meter.EventNameValidator is a validator for the "event_name" field. It is called by the builders before save.
	meter.EventNameValidator = meterDescEventName.Validators[0].(func(string) error)
	// meterDescName is the schema descriptor for name field.
	meterDescName := meterFields[2].Descriptor()
	// meter.NameValidator is a validator for the "name" field. It is called by the builders before save.
	meter.NameValidator = meterDescName.Validators[0].(func(string) error)
	// meterDescAggregation is the schema descriptor for aggregation field.
	meterDescAggregation := meterFields[3].Descriptor()
	// meter.DefaultAggregation holds the default value on creation for the aggregation field.
	meter.DefaultAggregation = meterDescAggregation.Default.(schema.MeterAggregation)
	// meterDescFilters is the schema descriptor for filters field.
	meterDescFilters := meterFields[4].Descriptor()
	// meter.DefaultFilters holds the default value on creation for the filters field.
	meter.DefaultFilters = meterDescFilters.Default.([]schema.MeterFilter)
	// meterDescResetUsage is the schema descriptor for reset_usage field.
	meterDescResetUsage := meterFields[5].Descriptor()
	// meter.DefaultResetUsage holds the default value on creation for the reset_usage field.
	meter.DefaultResetUsage = meterDescResetUsage.Default.(string)
	paymentMixin := schema.Payment{}.Mixin()
	paymentMixinFields0 := paymentMixin[0].Fields()
	_ = paymentMixinFields0
	paymentFields := schema.Payment{}.Fields()
	_ = paymentFields
	// paymentDescTenantID is the schema descriptor for tenant_id field.
	paymentDescTenantID := paymentMixinFields0[0].Descriptor()
	// payment.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	payment.TenantIDValidator = paymentDescTenantID.Validators[0].(func(string) error)
	// paymentDescStatus is the schema descriptor for status field.
	paymentDescStatus := paymentMixinFields0[1].Descriptor()
	// payment.DefaultStatus holds the default value on creation for the status field.
	payment.DefaultStatus = paymentDescStatus.Default.(string)
	// paymentDescCreatedAt is the schema descriptor for created_at field.
	paymentDescCreatedAt := paymentMixinFields0[2].Descriptor()
	// payment.DefaultCreatedAt holds the default value on creation for the created_at field.
	payment.DefaultCreatedAt = paymentDescCreatedAt.Default.(func() time.Time)
	// paymentDescUpdatedAt is the schema descriptor for updated_at field.
	paymentDescUpdatedAt := paymentMixinFields0[3].Descriptor()
	// payment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	payment.DefaultUpdatedAt = paymentDescUpdatedAt.Default.(func() time.Time)
	// payment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	payment.UpdateDefaultUpdatedAt = paymentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// paymentDescDestinationType is the schema descriptor for destination_type field.
	paymentDescDestinationType := paymentFields[2].Descriptor()
	// payment.DestinationTypeValidator is a validator for the "destination_type" field. It is called by the builders before save.
	payment.DestinationTypeValidator = paymentDescDestinationType.Validators[0].(func(string) error)
	// paymentDescDestinationID is the schema descriptor for destination_id field.
	paymentDescDestinationID := paymentFields[3].Descriptor()
	// payment.DestinationIDValidator is a validator for the "destination_id" field. It is called by the builders before save.
	payment.DestinationIDValidator = paymentDescDestinationID.Validators[0].(func(string) error)
	// paymentDescPaymentMethodType is the schema descriptor for payment_method_type field.
	paymentDescPaymentMethodType := paymentFields[4].Descriptor()
	// payment.PaymentMethodTypeValidator is a validator for the "payment_method_type" field. It is called by the builders before save.
	payment.PaymentMethodTypeValidator = paymentDescPaymentMethodType.Validators[0].(func(string) error)
	// paymentDescAmount is the schema descriptor for amount field.
	paymentDescAmount := paymentFields[8].Descriptor()
	// payment.DefaultAmount holds the default value on creation for the amount field.
	payment.DefaultAmount = paymentDescAmount.Default.(decimal.Decimal)
	// paymentDescCurrency is the schema descriptor for currency field.
	paymentDescCurrency := paymentFields[9].Descriptor()
	// payment.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	payment.CurrencyValidator = paymentDescCurrency.Validators[0].(func(string) error)
	// paymentDescPaymentStatus is the schema descriptor for payment_status field.
	paymentDescPaymentStatus := paymentFields[10].Descriptor()
	// payment.PaymentStatusValidator is a validator for the "payment_status" field. It is called by the builders before save.
	payment.PaymentStatusValidator = paymentDescPaymentStatus.Validators[0].(func(string) error)
	// paymentDescTrackAttempts is the schema descriptor for track_attempts field.
	paymentDescTrackAttempts := paymentFields[11].Descriptor()
	// payment.DefaultTrackAttempts holds the default value on creation for the track_attempts field.
	payment.DefaultTrackAttempts = paymentDescTrackAttempts.Default.(bool)
	paymentattemptMixin := schema.PaymentAttempt{}.Mixin()
	paymentattemptMixinFields0 := paymentattemptMixin[0].Fields()
	_ = paymentattemptMixinFields0
	paymentattemptFields := schema.PaymentAttempt{}.Fields()
	_ = paymentattemptFields
	// paymentattemptDescTenantID is the schema descriptor for tenant_id field.
	paymentattemptDescTenantID := paymentattemptMixinFields0[0].Descriptor()
	// paymentattempt.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	paymentattempt.TenantIDValidator = paymentattemptDescTenantID.Validators[0].(func(string) error)
	// paymentattemptDescStatus is the schema descriptor for status field.
	paymentattemptDescStatus := paymentattemptMixinFields0[1].Descriptor()
	// paymentattempt.DefaultStatus holds the default value on creation for the status field.
	paymentattempt.DefaultStatus = paymentattemptDescStatus.Default.(string)
	// paymentattemptDescCreatedAt is the schema descriptor for created_at field.
	paymentattemptDescCreatedAt := paymentattemptMixinFields0[2].Descriptor()
	// paymentattempt.DefaultCreatedAt holds the default value on creation for the created_at field.
	paymentattempt.DefaultCreatedAt = paymentattemptDescCreatedAt.Default.(func() time.Time)
	// paymentattemptDescUpdatedAt is the schema descriptor for updated_at field.
	paymentattemptDescUpdatedAt := paymentattemptMixinFields0[3].Descriptor()
	// paymentattempt.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	paymentattempt.DefaultUpdatedAt = paymentattemptDescUpdatedAt.Default.(func() time.Time)
	// paymentattempt.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	paymentattempt.UpdateDefaultUpdatedAt = paymentattemptDescUpdatedAt.UpdateDefault.(func() time.Time)
	// paymentattemptDescPaymentID is the schema descriptor for payment_id field.
	paymentattemptDescPaymentID := paymentattemptFields[1].Descriptor()
	// paymentattempt.PaymentIDValidator is a validator for the "payment_id" field. It is called by the builders before save.
	paymentattempt.PaymentIDValidator = paymentattemptDescPaymentID.Validators[0].(func(string) error)
	// paymentattemptDescPaymentStatus is the schema descriptor for payment_status field.
	paymentattemptDescPaymentStatus := paymentattemptFields[2].Descriptor()
	// paymentattempt.PaymentStatusValidator is a validator for the "payment_status" field. It is called by the builders before save.
	paymentattempt.PaymentStatusValidator = paymentattemptDescPaymentStatus.Validators[0].(func(string) error)
	// paymentattemptDescAttemptNumber is the schema descriptor for attempt_number field.
	paymentattemptDescAttemptNumber := paymentattemptFields[3].Descriptor()
	// paymentattempt.DefaultAttemptNumber holds the default value on creation for the attempt_number field.
	paymentattempt.DefaultAttemptNumber = paymentattemptDescAttemptNumber.Default.(int)
	// paymentattempt.AttemptNumberValidator is a validator for the "attempt_number" field. It is called by the builders before save.
	paymentattempt.AttemptNumberValidator = paymentattemptDescAttemptNumber.Validators[0].(func(int) error)
	planMixin := schema.Plan{}.Mixin()
	planMixinFields0 := planMixin[0].Fields()
	_ = planMixinFields0
	planFields := schema.Plan{}.Fields()
	_ = planFields
	// planDescTenantID is the schema descriptor for tenant_id field.
	planDescTenantID := planMixinFields0[0].Descriptor()
	// plan.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	plan.TenantIDValidator = planDescTenantID.Validators[0].(func(string) error)
	// planDescStatus is the schema descriptor for status field.
	planDescStatus := planMixinFields0[1].Descriptor()
	// plan.DefaultStatus holds the default value on creation for the status field.
	plan.DefaultStatus = planDescStatus.Default.(string)
	// planDescCreatedAt is the schema descriptor for created_at field.
	planDescCreatedAt := planMixinFields0[2].Descriptor()
	// plan.DefaultCreatedAt holds the default value on creation for the created_at field.
	plan.DefaultCreatedAt = planDescCreatedAt.Default.(func() time.Time)
	// planDescUpdatedAt is the schema descriptor for updated_at field.
	planDescUpdatedAt := planMixinFields0[3].Descriptor()
	// plan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	plan.DefaultUpdatedAt = planDescUpdatedAt.Default.(func() time.Time)
	// plan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	plan.UpdateDefaultUpdatedAt = planDescUpdatedAt.UpdateDefault.(func() time.Time)
	// planDescName is the schema descriptor for name field.
	planDescName := planFields[2].Descriptor()
	// plan.NameValidator is a validator for the "name" field. It is called by the builders before save.
	plan.NameValidator = planDescName.Validators[0].(func(string) error)
	// planDescInvoiceCadence is the schema descriptor for invoice_cadence field.
	planDescInvoiceCadence := planFields[4].Descriptor()
	// plan.InvoiceCadenceValidator is a validator for the "invoice_cadence" field. It is called by the builders before save.
	plan.InvoiceCadenceValidator = planDescInvoiceCadence.Validators[0].(func(string) error)
	// planDescTrialPeriod is the schema descriptor for trial_period field.
	planDescTrialPeriod := planFields[5].Descriptor()
	// plan.DefaultTrialPeriod holds the default value on creation for the trial_period field.
	plan.DefaultTrialPeriod = planDescTrialPeriod.Default.(int)
	priceMixin := schema.Price{}.Mixin()
	priceMixinFields0 := priceMixin[0].Fields()
	_ = priceMixinFields0
	priceFields := schema.Price{}.Fields()
	_ = priceFields
	// priceDescTenantID is the schema descriptor for tenant_id field.
	priceDescTenantID := priceMixinFields0[0].Descriptor()
	// price.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	price.TenantIDValidator = priceDescTenantID.Validators[0].(func(string) error)
	// priceDescStatus is the schema descriptor for status field.
	priceDescStatus := priceMixinFields0[1].Descriptor()
	// price.DefaultStatus holds the default value on creation for the status field.
	price.DefaultStatus = priceDescStatus.Default.(string)
	// priceDescCreatedAt is the schema descriptor for created_at field.
	priceDescCreatedAt := priceMixinFields0[2].Descriptor()
	// price.DefaultCreatedAt holds the default value on creation for the created_at field.
	price.DefaultCreatedAt = priceDescCreatedAt.Default.(func() time.Time)
	// priceDescUpdatedAt is the schema descriptor for updated_at field.
	priceDescUpdatedAt := priceMixinFields0[3].Descriptor()
	// price.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	price.DefaultUpdatedAt = priceDescUpdatedAt.Default.(func() time.Time)
	// price.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	price.UpdateDefaultUpdatedAt = priceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// priceDescCurrency is the schema descriptor for currency field.
	priceDescCurrency := priceFields[2].Descriptor()
	// price.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	price.CurrencyValidator = priceDescCurrency.Validators[0].(func(string) error)
	// priceDescDisplayAmount is the schema descriptor for display_amount field.
	priceDescDisplayAmount := priceFields[3].Descriptor()
	// price.DisplayAmountValidator is a validator for the "display_amount" field. It is called by the builders before save.
	price.DisplayAmountValidator = priceDescDisplayAmount.Validators[0].(func(string) error)
	// priceDescPlanID is the schema descriptor for plan_id field.
	priceDescPlanID := priceFields[4].Descriptor()
	// price.PlanIDValidator is a validator for the "plan_id" field. It is called by the builders before save.
	price.PlanIDValidator = priceDescPlanID.Validators[0].(func(string) error)
	// priceDescType is the schema descriptor for type field.
	priceDescType := priceFields[5].Descriptor()
	// price.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	price.TypeValidator = priceDescType.Validators[0].(func(string) error)
	// priceDescBillingPeriod is the schema descriptor for billing_period field.
	priceDescBillingPeriod := priceFields[6].Descriptor()
	// price.BillingPeriodValidator is a validator for the "billing_period" field. It is called by the builders before save.
	price.BillingPeriodValidator = priceDescBillingPeriod.Validators[0].(func(string) error)
	// priceDescBillingPeriodCount is the schema descriptor for billing_period_count field.
	priceDescBillingPeriodCount := priceFields[7].Descriptor()
	// price.BillingPeriodCountValidator is a validator for the "billing_period_count" field. It is called by the builders before save.
	price.BillingPeriodCountValidator = priceDescBillingPeriodCount.Validators[0].(func(int) error)
	// priceDescBillingModel is the schema descriptor for billing_model field.
	priceDescBillingModel := priceFields[8].Descriptor()
	// price.BillingModelValidator is a validator for the "billing_model" field. It is called by the builders before save.
	price.BillingModelValidator = priceDescBillingModel.Validators[0].(func(string) error)
	// priceDescBillingCadence is the schema descriptor for billing_cadence field.
	priceDescBillingCadence := priceFields[9].Descriptor()
	// price.BillingCadenceValidator is a validator for the "billing_cadence" field. It is called by the builders before save.
	price.BillingCadenceValidator = priceDescBillingCadence.Validators[0].(func(string) error)
	subscriptionMixin := schema.Subscription{}.Mixin()
	subscriptionMixinFields0 := subscriptionMixin[0].Fields()
	_ = subscriptionMixinFields0
	subscriptionFields := schema.Subscription{}.Fields()
	_ = subscriptionFields
	// subscriptionDescTenantID is the schema descriptor for tenant_id field.
	subscriptionDescTenantID := subscriptionMixinFields0[0].Descriptor()
	// subscription.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	subscription.TenantIDValidator = subscriptionDescTenantID.Validators[0].(func(string) error)
	// subscriptionDescStatus is the schema descriptor for status field.
	subscriptionDescStatus := subscriptionMixinFields0[1].Descriptor()
	// subscription.DefaultStatus holds the default value on creation for the status field.
	subscription.DefaultStatus = subscriptionDescStatus.Default.(string)
	// subscriptionDescCreatedAt is the schema descriptor for created_at field.
	subscriptionDescCreatedAt := subscriptionMixinFields0[2].Descriptor()
	// subscription.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscription.DefaultCreatedAt = subscriptionDescCreatedAt.Default.(func() time.Time)
	// subscriptionDescUpdatedAt is the schema descriptor for updated_at field.
	subscriptionDescUpdatedAt := subscriptionMixinFields0[3].Descriptor()
	// subscription.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscription.DefaultUpdatedAt = subscriptionDescUpdatedAt.Default.(func() time.Time)
	// subscription.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscription.UpdateDefaultUpdatedAt = subscriptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriptionDescCustomerID is the schema descriptor for customer_id field.
	subscriptionDescCustomerID := subscriptionFields[2].Descriptor()
	// subscription.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	subscription.CustomerIDValidator = subscriptionDescCustomerID.Validators[0].(func(string) error)
	// subscriptionDescPlanID is the schema descriptor for plan_id field.
	subscriptionDescPlanID := subscriptionFields[3].Descriptor()
	// subscription.PlanIDValidator is a validator for the "plan_id" field. It is called by the builders before save.
	subscription.PlanIDValidator = subscriptionDescPlanID.Validators[0].(func(string) error)
	// subscriptionDescSubscriptionStatus is the schema descriptor for subscription_status field.
	subscriptionDescSubscriptionStatus := subscriptionFields[4].Descriptor()
	// subscription.DefaultSubscriptionStatus holds the default value on creation for the subscription_status field.
	subscription.DefaultSubscriptionStatus = subscriptionDescSubscriptionStatus.Default.(string)
	// subscriptionDescCurrency is the schema descriptor for currency field.
	subscriptionDescCurrency := subscriptionFields[5].Descriptor()
	// subscription.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	subscription.CurrencyValidator = subscriptionDescCurrency.Validators[0].(func(string) error)
	// subscriptionDescBillingAnchor is the schema descriptor for billing_anchor field.
	subscriptionDescBillingAnchor := subscriptionFields[6].Descriptor()
	// subscription.DefaultBillingAnchor holds the default value on creation for the billing_anchor field.
	subscription.DefaultBillingAnchor = subscriptionDescBillingAnchor.Default.(func() time.Time)
	// subscriptionDescStartDate is the schema descriptor for start_date field.
	subscriptionDescStartDate := subscriptionFields[7].Descriptor()
	// subscription.DefaultStartDate holds the default value on creation for the start_date field.
	subscription.DefaultStartDate = subscriptionDescStartDate.Default.(func() time.Time)
	// subscriptionDescCurrentPeriodStart is the schema descriptor for current_period_start field.
	subscriptionDescCurrentPeriodStart := subscriptionFields[9].Descriptor()
	// subscription.DefaultCurrentPeriodStart holds the default value on creation for the current_period_start field.
	subscription.DefaultCurrentPeriodStart = subscriptionDescCurrentPeriodStart.Default.(func() time.Time)
	// subscriptionDescCurrentPeriodEnd is the schema descriptor for current_period_end field.
	subscriptionDescCurrentPeriodEnd := subscriptionFields[10].Descriptor()
	// subscription.DefaultCurrentPeriodEnd holds the default value on creation for the current_period_end field.
	subscription.DefaultCurrentPeriodEnd = subscriptionDescCurrentPeriodEnd.Default.(func() time.Time)
	// subscriptionDescCancelAtPeriodEnd is the schema descriptor for cancel_at_period_end field.
	subscriptionDescCancelAtPeriodEnd := subscriptionFields[13].Descriptor()
	// subscription.DefaultCancelAtPeriodEnd holds the default value on creation for the cancel_at_period_end field.
	subscription.DefaultCancelAtPeriodEnd = subscriptionDescCancelAtPeriodEnd.Default.(bool)
	// subscriptionDescInvoiceCadence is the schema descriptor for invoice_cadence field.
	subscriptionDescInvoiceCadence := subscriptionFields[16].Descriptor()
	// subscription.InvoiceCadenceValidator is a validator for the "invoice_cadence" field. It is called by the builders before save.
	subscription.InvoiceCadenceValidator = subscriptionDescInvoiceCadence.Validators[0].(func(string) error)
	// subscriptionDescBillingCadence is the schema descriptor for billing_cadence field.
	subscriptionDescBillingCadence := subscriptionFields[17].Descriptor()
	// subscription.BillingCadenceValidator is a validator for the "billing_cadence" field. It is called by the builders before save.
	subscription.BillingCadenceValidator = subscriptionDescBillingCadence.Validators[0].(func(string) error)
	// subscriptionDescBillingPeriod is the schema descriptor for billing_period field.
	subscriptionDescBillingPeriod := subscriptionFields[18].Descriptor()
	// subscription.BillingPeriodValidator is a validator for the "billing_period" field. It is called by the builders before save.
	subscription.BillingPeriodValidator = subscriptionDescBillingPeriod.Validators[0].(func(string) error)
	// subscriptionDescBillingPeriodCount is the schema descriptor for billing_period_count field.
	subscriptionDescBillingPeriodCount := subscriptionFields[19].Descriptor()
	// subscription.DefaultBillingPeriodCount holds the default value on creation for the billing_period_count field.
	subscription.DefaultBillingPeriodCount = subscriptionDescBillingPeriodCount.Default.(int)
	// subscriptionDescVersion is the schema descriptor for version field.
	subscriptionDescVersion := subscriptionFields[20].Descriptor()
	// subscription.DefaultVersion holds the default value on creation for the version field.
	subscription.DefaultVersion = subscriptionDescVersion.Default.(int)
	subscriptionlineitemMixin := schema.SubscriptionLineItem{}.Mixin()
	subscriptionlineitemMixinFields0 := subscriptionlineitemMixin[0].Fields()
	_ = subscriptionlineitemMixinFields0
	subscriptionlineitemFields := schema.SubscriptionLineItem{}.Fields()
	_ = subscriptionlineitemFields
	// subscriptionlineitemDescTenantID is the schema descriptor for tenant_id field.
	subscriptionlineitemDescTenantID := subscriptionlineitemMixinFields0[0].Descriptor()
	// subscriptionlineitem.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	subscriptionlineitem.TenantIDValidator = subscriptionlineitemDescTenantID.Validators[0].(func(string) error)
	// subscriptionlineitemDescStatus is the schema descriptor for status field.
	subscriptionlineitemDescStatus := subscriptionlineitemMixinFields0[1].Descriptor()
	// subscriptionlineitem.DefaultStatus holds the default value on creation for the status field.
	subscriptionlineitem.DefaultStatus = subscriptionlineitemDescStatus.Default.(string)
	// subscriptionlineitemDescCreatedAt is the schema descriptor for created_at field.
	subscriptionlineitemDescCreatedAt := subscriptionlineitemMixinFields0[2].Descriptor()
	// subscriptionlineitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscriptionlineitem.DefaultCreatedAt = subscriptionlineitemDescCreatedAt.Default.(func() time.Time)
	// subscriptionlineitemDescUpdatedAt is the schema descriptor for updated_at field.
	subscriptionlineitemDescUpdatedAt := subscriptionlineitemMixinFields0[3].Descriptor()
	// subscriptionlineitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscriptionlineitem.DefaultUpdatedAt = subscriptionlineitemDescUpdatedAt.Default.(func() time.Time)
	// subscriptionlineitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscriptionlineitem.UpdateDefaultUpdatedAt = subscriptionlineitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriptionlineitemDescSubscriptionID is the schema descriptor for subscription_id field.
	subscriptionlineitemDescSubscriptionID := subscriptionlineitemFields[1].Descriptor()
	// subscriptionlineitem.SubscriptionIDValidator is a validator for the "subscription_id" field. It is called by the builders before save.
	subscriptionlineitem.SubscriptionIDValidator = subscriptionlineitemDescSubscriptionID.Validators[0].(func(string) error)
	// subscriptionlineitemDescCustomerID is the schema descriptor for customer_id field.
	subscriptionlineitemDescCustomerID := subscriptionlineitemFields[2].Descriptor()
	// subscriptionlineitem.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	subscriptionlineitem.CustomerIDValidator = subscriptionlineitemDescCustomerID.Validators[0].(func(string) error)
	// subscriptionlineitemDescPriceID is the schema descriptor for price_id field.
	subscriptionlineitemDescPriceID := subscriptionlineitemFields[5].Descriptor()
	// subscriptionlineitem.PriceIDValidator is a validator for the "price_id" field. It is called by the builders before save.
	subscriptionlineitem.PriceIDValidator = subscriptionlineitemDescPriceID.Validators[0].(func(string) error)
	// subscriptionlineitemDescQuantity is the schema descriptor for quantity field.
	subscriptionlineitemDescQuantity := subscriptionlineitemFields[10].Descriptor()
	// subscriptionlineitem.DefaultQuantity holds the default value on creation for the quantity field.
	subscriptionlineitem.DefaultQuantity = subscriptionlineitemDescQuantity.Default.(decimal.Decimal)
	// subscriptionlineitemDescCurrency is the schema descriptor for currency field.
	subscriptionlineitemDescCurrency := subscriptionlineitemFields[11].Descriptor()
	// subscriptionlineitem.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	subscriptionlineitem.CurrencyValidator = subscriptionlineitemDescCurrency.Validators[0].(func(string) error)
	// subscriptionlineitemDescBillingPeriod is the schema descriptor for billing_period field.
	subscriptionlineitemDescBillingPeriod := subscriptionlineitemFields[12].Descriptor()
	// subscriptionlineitem.BillingPeriodValidator is a validator for the "billing_period" field. It is called by the builders before save.
	subscriptionlineitem.BillingPeriodValidator = subscriptionlineitemDescBillingPeriod.Validators[0].(func(string) error)
	taskMixin := schema.Task{}.Mixin()
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescTenantID is the schema descriptor for tenant_id field.
	taskDescTenantID := taskMixinFields0[0].Descriptor()
	// task.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	task.TenantIDValidator = taskDescTenantID.Validators[0].(func(string) error)
	// taskDescStatus is the schema descriptor for status field.
	taskDescStatus := taskMixinFields0[1].Descriptor()
	// task.DefaultStatus holds the default value on creation for the status field.
	task.DefaultStatus = taskDescStatus.Default.(string)
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskMixinFields0[2].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescUpdatedAt is the schema descriptor for updated_at field.
	taskDescUpdatedAt := taskMixinFields0[3].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
	// task.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	task.UpdateDefaultUpdatedAt = taskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskDescTaskType is the schema descriptor for task_type field.
	taskDescTaskType := taskFields[1].Descriptor()
	// task.TaskTypeValidator is a validator for the "task_type" field. It is called by the builders before save.
	task.TaskTypeValidator = taskDescTaskType.Validators[0].(func(string) error)
	// taskDescEntityType is the schema descriptor for entity_type field.
	taskDescEntityType := taskFields[2].Descriptor()
	// task.EntityTypeValidator is a validator for the "entity_type" field. It is called by the builders before save.
	task.EntityTypeValidator = taskDescEntityType.Validators[0].(func(string) error)
	// taskDescFileURL is the schema descriptor for file_url field.
	taskDescFileURL := taskFields[3].Descriptor()
	// task.FileURLValidator is a validator for the "file_url" field. It is called by the builders before save.
	task.FileURLValidator = taskDescFileURL.Validators[0].(func(string) error)
	// taskDescFileType is the schema descriptor for file_type field.
	taskDescFileType := taskFields[5].Descriptor()
	// task.FileTypeValidator is a validator for the "file_type" field. It is called by the builders before save.
	task.FileTypeValidator = taskDescFileType.Validators[0].(func(string) error)
	// taskDescTaskStatus is the schema descriptor for task_status field.
	taskDescTaskStatus := taskFields[6].Descriptor()
	// task.DefaultTaskStatus holds the default value on creation for the task_status field.
	task.DefaultTaskStatus = taskDescTaskStatus.Default.(string)
	// taskDescProcessedRecords is the schema descriptor for processed_records field.
	taskDescProcessedRecords := taskFields[8].Descriptor()
	// task.DefaultProcessedRecords holds the default value on creation for the processed_records field.
	task.DefaultProcessedRecords = taskDescProcessedRecords.Default.(int)
	// taskDescSuccessfulRecords is the schema descriptor for successful_records field.
	taskDescSuccessfulRecords := taskFields[9].Descriptor()
	// task.DefaultSuccessfulRecords holds the default value on creation for the successful_records field.
	task.DefaultSuccessfulRecords = taskDescSuccessfulRecords.Default.(int)
	// taskDescFailedRecords is the schema descriptor for failed_records field.
	taskDescFailedRecords := taskFields[10].Descriptor()
	// task.DefaultFailedRecords holds the default value on creation for the failed_records field.
	task.DefaultFailedRecords = taskDescFailedRecords.Default.(int)
	walletMixin := schema.Wallet{}.Mixin()
	walletMixinFields0 := walletMixin[0].Fields()
	_ = walletMixinFields0
	walletFields := schema.Wallet{}.Fields()
	_ = walletFields
	// walletDescTenantID is the schema descriptor for tenant_id field.
	walletDescTenantID := walletMixinFields0[0].Descriptor()
	// wallet.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	wallet.TenantIDValidator = walletDescTenantID.Validators[0].(func(string) error)
	// walletDescStatus is the schema descriptor for status field.
	walletDescStatus := walletMixinFields0[1].Descriptor()
	// wallet.DefaultStatus holds the default value on creation for the status field.
	wallet.DefaultStatus = walletDescStatus.Default.(string)
	// walletDescCreatedAt is the schema descriptor for created_at field.
	walletDescCreatedAt := walletMixinFields0[2].Descriptor()
	// wallet.DefaultCreatedAt holds the default value on creation for the created_at field.
	wallet.DefaultCreatedAt = walletDescCreatedAt.Default.(func() time.Time)
	// walletDescUpdatedAt is the schema descriptor for updated_at field.
	walletDescUpdatedAt := walletMixinFields0[3].Descriptor()
	// wallet.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	wallet.DefaultUpdatedAt = walletDescUpdatedAt.Default.(func() time.Time)
	// wallet.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	wallet.UpdateDefaultUpdatedAt = walletDescUpdatedAt.UpdateDefault.(func() time.Time)
	// walletDescCustomerID is the schema descriptor for customer_id field.
	walletDescCustomerID := walletFields[2].Descriptor()
	// wallet.CustomerIDValidator is a validator for the "customer_id" field. It is called by the builders before save.
	wallet.CustomerIDValidator = walletDescCustomerID.Validators[0].(func(string) error)
	// walletDescCurrency is the schema descriptor for currency field.
	walletDescCurrency := walletFields[3].Descriptor()
	// wallet.CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	wallet.CurrencyValidator = walletDescCurrency.Validators[0].(func(string) error)
	// walletDescBalance is the schema descriptor for balance field.
	walletDescBalance := walletFields[6].Descriptor()
	// wallet.DefaultBalance holds the default value on creation for the balance field.
	wallet.DefaultBalance = walletDescBalance.Default.(decimal.Decimal)
	// walletDescWalletStatus is the schema descriptor for wallet_status field.
	walletDescWalletStatus := walletFields[7].Descriptor()
	// wallet.DefaultWalletStatus holds the default value on creation for the wallet_status field.
	wallet.DefaultWalletStatus = walletDescWalletStatus.Default.(string)
	// walletDescAutoTopupTrigger is the schema descriptor for auto_topup_trigger field.
	walletDescAutoTopupTrigger := walletFields[8].Descriptor()
	// wallet.DefaultAutoTopupTrigger holds the default value on creation for the auto_topup_trigger field.
	wallet.DefaultAutoTopupTrigger = walletDescAutoTopupTrigger.Default.(string)
	wallettransactionMixin := schema.WalletTransaction{}.Mixin()
	wallettransactionMixinFields0 := wallettransactionMixin[0].Fields()
	_ = wallettransactionMixinFields0
	wallettransactionFields := schema.WalletTransaction{}.Fields()
	_ = wallettransactionFields
	// wallettransactionDescTenantID is the schema descriptor for tenant_id field.
	wallettransactionDescTenantID := wallettransactionMixinFields0[0].Descriptor()
	// wallettransaction.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	wallettransaction.TenantIDValidator = wallettransactionDescTenantID.Validators[0].(func(string) error)
	// wallettransactionDescStatus is the schema descriptor for status field.
	wallettransactionDescStatus := wallettransactionMixinFields0[1].Descriptor()
	// wallettransaction.DefaultStatus holds the default value on creation for the status field.
	wallettransaction.DefaultStatus = wallettransactionDescStatus.Default.(string)
	// wallettransactionDescCreatedAt is the schema descriptor for created_at field.
	wallettransactionDescCreatedAt := wallettransactionMixinFields0[2].Descriptor()
	// wallettransaction.DefaultCreatedAt holds the default value on creation for the created_at field.
	wallettransaction.DefaultCreatedAt = wallettransactionDescCreatedAt.Default.(func() time.Time)
	// wallettransactionDescUpdatedAt is the schema descriptor for updated_at field.
	wallettransactionDescUpdatedAt := wallettransactionMixinFields0[3].Descriptor()
	// wallettransaction.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	wallettransaction.DefaultUpdatedAt = wallettransactionDescUpdatedAt.Default.(func() time.Time)
	// wallettransaction.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	wallettransaction.UpdateDefaultUpdatedAt = wallettransactionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// wallettransactionDescWalletID is the schema descriptor for wallet_id field.
	wallettransactionDescWalletID := wallettransactionFields[1].Descriptor()
	// wallettransaction.WalletIDValidator is a validator for the "wallet_id" field. It is called by the builders before save.
	wallettransaction.WalletIDValidator = wallettransactionDescWalletID.Validators[0].(func(string) error)
	// wallettransactionDescType is the schema descriptor for type field.
	wallettransactionDescType := wallettransactionFields[2].Descriptor()
	// wallettransaction.DefaultType holds the default value on creation for the type field.
	wallettransaction.DefaultType = wallettransactionDescType.Default.(string)
	// wallettransaction.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	wallettransaction.TypeValidator = wallettransactionDescType.Validators[0].(func(string) error)
	// wallettransactionDescBalanceBefore is the schema descriptor for balance_before field.
	wallettransactionDescBalanceBefore := wallettransactionFields[4].Descriptor()
	// wallettransaction.DefaultBalanceBefore holds the default value on creation for the balance_before field.
	wallettransaction.DefaultBalanceBefore = wallettransactionDescBalanceBefore.Default.(decimal.Decimal)
	// wallettransactionDescBalanceAfter is the schema descriptor for balance_after field.
	wallettransactionDescBalanceAfter := wallettransactionFields[5].Descriptor()
	// wallettransaction.DefaultBalanceAfter holds the default value on creation for the balance_after field.
	wallettransaction.DefaultBalanceAfter = wallettransactionDescBalanceAfter.Default.(decimal.Decimal)
	// wallettransactionDescTransactionStatus is the schema descriptor for transaction_status field.
	wallettransactionDescTransactionStatus := wallettransactionFields[10].Descriptor()
	// wallettransaction.DefaultTransactionStatus holds the default value on creation for the transaction_status field.
	wallettransaction.DefaultTransactionStatus = wallettransactionDescTransactionStatus.Default.(string)
}
