// Code generated by ent, DO NOT EDIT.

package stripesyncbatch

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/flexprice/flexprice/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEnvironmentID, v))
}

// EntityID applies equality check predicate on the "entity_id" field. It's identical to EntityIDEQ.
func EntityID(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEntityID, v))
}

// EntityType applies equality check predicate on the "entity_type" field. It's identical to EntityTypeEQ.
func EntityType(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEntityType, v))
}

// MeterID applies equality check predicate on the "meter_id" field. It's identical to MeterIDEQ.
func MeterID(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldMeterID, v))
}

// EventType applies equality check predicate on the "event_type" field. It's identical to EventTypeEQ.
func EventType(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEventType, v))
}

// AggregatedQuantity applies equality check predicate on the "aggregated_quantity" field. It's identical to AggregatedQuantityEQ.
func AggregatedQuantity(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldAggregatedQuantity, v))
}

// EventCount applies equality check predicate on the "event_count" field. It's identical to EventCountEQ.
func EventCount(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEventCount, v))
}

// StripeEventID applies equality check predicate on the "stripe_event_id" field. It's identical to StripeEventIDEQ.
func StripeEventID(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldStripeEventID, v))
}

// SyncStatus applies equality check predicate on the "sync_status" field. It's identical to SyncStatusEQ.
func SyncStatus(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldSyncStatus, v))
}

// RetryCount applies equality check predicate on the "retry_count" field. It's identical to RetryCountEQ.
func RetryCount(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldRetryCount, v))
}

// ErrorMessage applies equality check predicate on the "error_message" field. It's identical to ErrorMessageEQ.
func ErrorMessage(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldErrorMessage, v))
}

// WindowStart applies equality check predicate on the "window_start" field. It's identical to WindowStartEQ.
func WindowStart(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldWindowStart, v))
}

// WindowEnd applies equality check predicate on the "window_end" field. It's identical to WindowEndEQ.
func WindowEnd(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldWindowEnd, v))
}

// SyncedAt applies equality check predicate on the "synced_at" field. It's identical to SyncedAtEQ.
func SyncedAt(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldSyncedAt, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// EntityIDEQ applies the EQ predicate on the "entity_id" field.
func EntityIDEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEntityID, v))
}

// EntityIDNEQ applies the NEQ predicate on the "entity_id" field.
func EntityIDNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldEntityID, v))
}

// EntityIDIn applies the In predicate on the "entity_id" field.
func EntityIDIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldEntityID, vs...))
}

// EntityIDNotIn applies the NotIn predicate on the "entity_id" field.
func EntityIDNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldEntityID, vs...))
}

// EntityIDGT applies the GT predicate on the "entity_id" field.
func EntityIDGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldEntityID, v))
}

// EntityIDGTE applies the GTE predicate on the "entity_id" field.
func EntityIDGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldEntityID, v))
}

// EntityIDLT applies the LT predicate on the "entity_id" field.
func EntityIDLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldEntityID, v))
}

// EntityIDLTE applies the LTE predicate on the "entity_id" field.
func EntityIDLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldEntityID, v))
}

// EntityIDContains applies the Contains predicate on the "entity_id" field.
func EntityIDContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldEntityID, v))
}

// EntityIDHasPrefix applies the HasPrefix predicate on the "entity_id" field.
func EntityIDHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldEntityID, v))
}

// EntityIDHasSuffix applies the HasSuffix predicate on the "entity_id" field.
func EntityIDHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldEntityID, v))
}

// EntityIDEqualFold applies the EqualFold predicate on the "entity_id" field.
func EntityIDEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldEntityID, v))
}

// EntityIDContainsFold applies the ContainsFold predicate on the "entity_id" field.
func EntityIDContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldEntityID, v))
}

// EntityTypeEQ applies the EQ predicate on the "entity_type" field.
func EntityTypeEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEntityType, v))
}

// EntityTypeNEQ applies the NEQ predicate on the "entity_type" field.
func EntityTypeNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldEntityType, v))
}

// EntityTypeIn applies the In predicate on the "entity_type" field.
func EntityTypeIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldEntityType, vs...))
}

// EntityTypeNotIn applies the NotIn predicate on the "entity_type" field.
func EntityTypeNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldEntityType, vs...))
}

// EntityTypeGT applies the GT predicate on the "entity_type" field.
func EntityTypeGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldEntityType, v))
}

// EntityTypeGTE applies the GTE predicate on the "entity_type" field.
func EntityTypeGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldEntityType, v))
}

// EntityTypeLT applies the LT predicate on the "entity_type" field.
func EntityTypeLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldEntityType, v))
}

// EntityTypeLTE applies the LTE predicate on the "entity_type" field.
func EntityTypeLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldEntityType, v))
}

// EntityTypeContains applies the Contains predicate on the "entity_type" field.
func EntityTypeContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldEntityType, v))
}

// EntityTypeHasPrefix applies the HasPrefix predicate on the "entity_type" field.
func EntityTypeHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldEntityType, v))
}

// EntityTypeHasSuffix applies the HasSuffix predicate on the "entity_type" field.
func EntityTypeHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldEntityType, v))
}

// EntityTypeEqualFold applies the EqualFold predicate on the "entity_type" field.
func EntityTypeEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldEntityType, v))
}

// EntityTypeContainsFold applies the ContainsFold predicate on the "entity_type" field.
func EntityTypeContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldEntityType, v))
}

// MeterIDEQ applies the EQ predicate on the "meter_id" field.
func MeterIDEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldMeterID, v))
}

// MeterIDNEQ applies the NEQ predicate on the "meter_id" field.
func MeterIDNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldMeterID, v))
}

// MeterIDIn applies the In predicate on the "meter_id" field.
func MeterIDIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldMeterID, vs...))
}

// MeterIDNotIn applies the NotIn predicate on the "meter_id" field.
func MeterIDNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldMeterID, vs...))
}

// MeterIDGT applies the GT predicate on the "meter_id" field.
func MeterIDGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldMeterID, v))
}

// MeterIDGTE applies the GTE predicate on the "meter_id" field.
func MeterIDGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldMeterID, v))
}

// MeterIDLT applies the LT predicate on the "meter_id" field.
func MeterIDLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldMeterID, v))
}

// MeterIDLTE applies the LTE predicate on the "meter_id" field.
func MeterIDLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldMeterID, v))
}

// MeterIDContains applies the Contains predicate on the "meter_id" field.
func MeterIDContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldMeterID, v))
}

// MeterIDHasPrefix applies the HasPrefix predicate on the "meter_id" field.
func MeterIDHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldMeterID, v))
}

// MeterIDHasSuffix applies the HasSuffix predicate on the "meter_id" field.
func MeterIDHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldMeterID, v))
}

// MeterIDEqualFold applies the EqualFold predicate on the "meter_id" field.
func MeterIDEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldMeterID, v))
}

// MeterIDContainsFold applies the ContainsFold predicate on the "meter_id" field.
func MeterIDContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldMeterID, v))
}

// EventTypeEQ applies the EQ predicate on the "event_type" field.
func EventTypeEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEventType, v))
}

// EventTypeNEQ applies the NEQ predicate on the "event_type" field.
func EventTypeNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldEventType, v))
}

// EventTypeIn applies the In predicate on the "event_type" field.
func EventTypeIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldEventType, vs...))
}

// EventTypeNotIn applies the NotIn predicate on the "event_type" field.
func EventTypeNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldEventType, vs...))
}

// EventTypeGT applies the GT predicate on the "event_type" field.
func EventTypeGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldEventType, v))
}

// EventTypeGTE applies the GTE predicate on the "event_type" field.
func EventTypeGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldEventType, v))
}

// EventTypeLT applies the LT predicate on the "event_type" field.
func EventTypeLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldEventType, v))
}

// EventTypeLTE applies the LTE predicate on the "event_type" field.
func EventTypeLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldEventType, v))
}

// EventTypeContains applies the Contains predicate on the "event_type" field.
func EventTypeContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldEventType, v))
}

// EventTypeHasPrefix applies the HasPrefix predicate on the "event_type" field.
func EventTypeHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldEventType, v))
}

// EventTypeHasSuffix applies the HasSuffix predicate on the "event_type" field.
func EventTypeHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldEventType, v))
}

// EventTypeEqualFold applies the EqualFold predicate on the "event_type" field.
func EventTypeEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldEventType, v))
}

// EventTypeContainsFold applies the ContainsFold predicate on the "event_type" field.
func EventTypeContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldEventType, v))
}

// AggregatedQuantityEQ applies the EQ predicate on the "aggregated_quantity" field.
func AggregatedQuantityEQ(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldAggregatedQuantity, v))
}

// AggregatedQuantityNEQ applies the NEQ predicate on the "aggregated_quantity" field.
func AggregatedQuantityNEQ(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldAggregatedQuantity, v))
}

// AggregatedQuantityIn applies the In predicate on the "aggregated_quantity" field.
func AggregatedQuantityIn(vs ...float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldAggregatedQuantity, vs...))
}

// AggregatedQuantityNotIn applies the NotIn predicate on the "aggregated_quantity" field.
func AggregatedQuantityNotIn(vs ...float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldAggregatedQuantity, vs...))
}

// AggregatedQuantityGT applies the GT predicate on the "aggregated_quantity" field.
func AggregatedQuantityGT(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldAggregatedQuantity, v))
}

// AggregatedQuantityGTE applies the GTE predicate on the "aggregated_quantity" field.
func AggregatedQuantityGTE(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldAggregatedQuantity, v))
}

// AggregatedQuantityLT applies the LT predicate on the "aggregated_quantity" field.
func AggregatedQuantityLT(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldAggregatedQuantity, v))
}

// AggregatedQuantityLTE applies the LTE predicate on the "aggregated_quantity" field.
func AggregatedQuantityLTE(v float64) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldAggregatedQuantity, v))
}

// EventCountEQ applies the EQ predicate on the "event_count" field.
func EventCountEQ(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldEventCount, v))
}

// EventCountNEQ applies the NEQ predicate on the "event_count" field.
func EventCountNEQ(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldEventCount, v))
}

// EventCountIn applies the In predicate on the "event_count" field.
func EventCountIn(vs ...int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldEventCount, vs...))
}

// EventCountNotIn applies the NotIn predicate on the "event_count" field.
func EventCountNotIn(vs ...int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldEventCount, vs...))
}

// EventCountGT applies the GT predicate on the "event_count" field.
func EventCountGT(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldEventCount, v))
}

// EventCountGTE applies the GTE predicate on the "event_count" field.
func EventCountGTE(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldEventCount, v))
}

// EventCountLT applies the LT predicate on the "event_count" field.
func EventCountLT(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldEventCount, v))
}

// EventCountLTE applies the LTE predicate on the "event_count" field.
func EventCountLTE(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldEventCount, v))
}

// StripeEventIDEQ applies the EQ predicate on the "stripe_event_id" field.
func StripeEventIDEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldStripeEventID, v))
}

// StripeEventIDNEQ applies the NEQ predicate on the "stripe_event_id" field.
func StripeEventIDNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldStripeEventID, v))
}

// StripeEventIDIn applies the In predicate on the "stripe_event_id" field.
func StripeEventIDIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldStripeEventID, vs...))
}

// StripeEventIDNotIn applies the NotIn predicate on the "stripe_event_id" field.
func StripeEventIDNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldStripeEventID, vs...))
}

// StripeEventIDGT applies the GT predicate on the "stripe_event_id" field.
func StripeEventIDGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldStripeEventID, v))
}

// StripeEventIDGTE applies the GTE predicate on the "stripe_event_id" field.
func StripeEventIDGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldStripeEventID, v))
}

// StripeEventIDLT applies the LT predicate on the "stripe_event_id" field.
func StripeEventIDLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldStripeEventID, v))
}

// StripeEventIDLTE applies the LTE predicate on the "stripe_event_id" field.
func StripeEventIDLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldStripeEventID, v))
}

// StripeEventIDContains applies the Contains predicate on the "stripe_event_id" field.
func StripeEventIDContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldStripeEventID, v))
}

// StripeEventIDHasPrefix applies the HasPrefix predicate on the "stripe_event_id" field.
func StripeEventIDHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldStripeEventID, v))
}

// StripeEventIDHasSuffix applies the HasSuffix predicate on the "stripe_event_id" field.
func StripeEventIDHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldStripeEventID, v))
}

// StripeEventIDIsNil applies the IsNil predicate on the "stripe_event_id" field.
func StripeEventIDIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldStripeEventID))
}

// StripeEventIDNotNil applies the NotNil predicate on the "stripe_event_id" field.
func StripeEventIDNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldStripeEventID))
}

// StripeEventIDEqualFold applies the EqualFold predicate on the "stripe_event_id" field.
func StripeEventIDEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldStripeEventID, v))
}

// StripeEventIDContainsFold applies the ContainsFold predicate on the "stripe_event_id" field.
func StripeEventIDContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldStripeEventID, v))
}

// SyncStatusEQ applies the EQ predicate on the "sync_status" field.
func SyncStatusEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldSyncStatus, v))
}

// SyncStatusNEQ applies the NEQ predicate on the "sync_status" field.
func SyncStatusNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldSyncStatus, v))
}

// SyncStatusIn applies the In predicate on the "sync_status" field.
func SyncStatusIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldSyncStatus, vs...))
}

// SyncStatusNotIn applies the NotIn predicate on the "sync_status" field.
func SyncStatusNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldSyncStatus, vs...))
}

// SyncStatusGT applies the GT predicate on the "sync_status" field.
func SyncStatusGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldSyncStatus, v))
}

// SyncStatusGTE applies the GTE predicate on the "sync_status" field.
func SyncStatusGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldSyncStatus, v))
}

// SyncStatusLT applies the LT predicate on the "sync_status" field.
func SyncStatusLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldSyncStatus, v))
}

// SyncStatusLTE applies the LTE predicate on the "sync_status" field.
func SyncStatusLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldSyncStatus, v))
}

// SyncStatusContains applies the Contains predicate on the "sync_status" field.
func SyncStatusContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldSyncStatus, v))
}

// SyncStatusHasPrefix applies the HasPrefix predicate on the "sync_status" field.
func SyncStatusHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldSyncStatus, v))
}

// SyncStatusHasSuffix applies the HasSuffix predicate on the "sync_status" field.
func SyncStatusHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldSyncStatus, v))
}

// SyncStatusEqualFold applies the EqualFold predicate on the "sync_status" field.
func SyncStatusEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldSyncStatus, v))
}

// SyncStatusContainsFold applies the ContainsFold predicate on the "sync_status" field.
func SyncStatusContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldSyncStatus, v))
}

// RetryCountEQ applies the EQ predicate on the "retry_count" field.
func RetryCountEQ(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldRetryCount, v))
}

// RetryCountNEQ applies the NEQ predicate on the "retry_count" field.
func RetryCountNEQ(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldRetryCount, v))
}

// RetryCountIn applies the In predicate on the "retry_count" field.
func RetryCountIn(vs ...int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldRetryCount, vs...))
}

// RetryCountNotIn applies the NotIn predicate on the "retry_count" field.
func RetryCountNotIn(vs ...int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldRetryCount, vs...))
}

// RetryCountGT applies the GT predicate on the "retry_count" field.
func RetryCountGT(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldRetryCount, v))
}

// RetryCountGTE applies the GTE predicate on the "retry_count" field.
func RetryCountGTE(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldRetryCount, v))
}

// RetryCountLT applies the LT predicate on the "retry_count" field.
func RetryCountLT(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldRetryCount, v))
}

// RetryCountLTE applies the LTE predicate on the "retry_count" field.
func RetryCountLTE(v int) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldRetryCount, v))
}

// ErrorMessageEQ applies the EQ predicate on the "error_message" field.
func ErrorMessageEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorMessageNEQ applies the NEQ predicate on the "error_message" field.
func ErrorMessageNEQ(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldErrorMessage, v))
}

// ErrorMessageIn applies the In predicate on the "error_message" field.
func ErrorMessageIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldErrorMessage, vs...))
}

// ErrorMessageNotIn applies the NotIn predicate on the "error_message" field.
func ErrorMessageNotIn(vs ...string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldErrorMessage, vs...))
}

// ErrorMessageGT applies the GT predicate on the "error_message" field.
func ErrorMessageGT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldErrorMessage, v))
}

// ErrorMessageGTE applies the GTE predicate on the "error_message" field.
func ErrorMessageGTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldErrorMessage, v))
}

// ErrorMessageLT applies the LT predicate on the "error_message" field.
func ErrorMessageLT(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldErrorMessage, v))
}

// ErrorMessageLTE applies the LTE predicate on the "error_message" field.
func ErrorMessageLTE(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldErrorMessage, v))
}

// ErrorMessageContains applies the Contains predicate on the "error_message" field.
func ErrorMessageContains(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContains(FieldErrorMessage, v))
}

// ErrorMessageHasPrefix applies the HasPrefix predicate on the "error_message" field.
func ErrorMessageHasPrefix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasPrefix(FieldErrorMessage, v))
}

// ErrorMessageHasSuffix applies the HasSuffix predicate on the "error_message" field.
func ErrorMessageHasSuffix(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldHasSuffix(FieldErrorMessage, v))
}

// ErrorMessageIsNil applies the IsNil predicate on the "error_message" field.
func ErrorMessageIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldErrorMessage))
}

// ErrorMessageNotNil applies the NotNil predicate on the "error_message" field.
func ErrorMessageNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldErrorMessage))
}

// ErrorMessageEqualFold applies the EqualFold predicate on the "error_message" field.
func ErrorMessageEqualFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEqualFold(FieldErrorMessage, v))
}

// ErrorMessageContainsFold applies the ContainsFold predicate on the "error_message" field.
func ErrorMessageContainsFold(v string) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldContainsFold(FieldErrorMessage, v))
}

// WindowStartEQ applies the EQ predicate on the "window_start" field.
func WindowStartEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldWindowStart, v))
}

// WindowStartNEQ applies the NEQ predicate on the "window_start" field.
func WindowStartNEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldWindowStart, v))
}

// WindowStartIn applies the In predicate on the "window_start" field.
func WindowStartIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldWindowStart, vs...))
}

// WindowStartNotIn applies the NotIn predicate on the "window_start" field.
func WindowStartNotIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldWindowStart, vs...))
}

// WindowStartGT applies the GT predicate on the "window_start" field.
func WindowStartGT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldWindowStart, v))
}

// WindowStartGTE applies the GTE predicate on the "window_start" field.
func WindowStartGTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldWindowStart, v))
}

// WindowStartLT applies the LT predicate on the "window_start" field.
func WindowStartLT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldWindowStart, v))
}

// WindowStartLTE applies the LTE predicate on the "window_start" field.
func WindowStartLTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldWindowStart, v))
}

// WindowEndEQ applies the EQ predicate on the "window_end" field.
func WindowEndEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldWindowEnd, v))
}

// WindowEndNEQ applies the NEQ predicate on the "window_end" field.
func WindowEndNEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldWindowEnd, v))
}

// WindowEndIn applies the In predicate on the "window_end" field.
func WindowEndIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldWindowEnd, vs...))
}

// WindowEndNotIn applies the NotIn predicate on the "window_end" field.
func WindowEndNotIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldWindowEnd, vs...))
}

// WindowEndGT applies the GT predicate on the "window_end" field.
func WindowEndGT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldWindowEnd, v))
}

// WindowEndGTE applies the GTE predicate on the "window_end" field.
func WindowEndGTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldWindowEnd, v))
}

// WindowEndLT applies the LT predicate on the "window_end" field.
func WindowEndLT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldWindowEnd, v))
}

// WindowEndLTE applies the LTE predicate on the "window_end" field.
func WindowEndLTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldWindowEnd, v))
}

// SyncedAtEQ applies the EQ predicate on the "synced_at" field.
func SyncedAtEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldEQ(FieldSyncedAt, v))
}

// SyncedAtNEQ applies the NEQ predicate on the "synced_at" field.
func SyncedAtNEQ(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNEQ(FieldSyncedAt, v))
}

// SyncedAtIn applies the In predicate on the "synced_at" field.
func SyncedAtIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIn(FieldSyncedAt, vs...))
}

// SyncedAtNotIn applies the NotIn predicate on the "synced_at" field.
func SyncedAtNotIn(vs ...time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotIn(FieldSyncedAt, vs...))
}

// SyncedAtGT applies the GT predicate on the "synced_at" field.
func SyncedAtGT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGT(FieldSyncedAt, v))
}

// SyncedAtGTE applies the GTE predicate on the "synced_at" field.
func SyncedAtGTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldGTE(FieldSyncedAt, v))
}

// SyncedAtLT applies the LT predicate on the "synced_at" field.
func SyncedAtLT(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLT(FieldSyncedAt, v))
}

// SyncedAtLTE applies the LTE predicate on the "synced_at" field.
func SyncedAtLTE(v time.Time) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldLTE(FieldSyncedAt, v))
}

// SyncedAtIsNil applies the IsNil predicate on the "synced_at" field.
func SyncedAtIsNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldIsNull(FieldSyncedAt))
}

// SyncedAtNotNil applies the NotNil predicate on the "synced_at" field.
func SyncedAtNotNil() predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.FieldNotNull(FieldSyncedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.StripeSyncBatch) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.StripeSyncBatch) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.StripeSyncBatch) predicate.StripeSyncBatch {
	return predicate.StripeSyncBatch(sql.NotPredicates(p))
}
