// Code generated by ent, DO NOT EDIT.

package taxrate

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/flexprice/flexprice/ent/predicate"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTenantID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldUpdatedBy, v))
}

// EnvironmentID applies equality check predicate on the "environment_id" field. It's identical to EnvironmentIDEQ.
func EnvironmentID(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldEnvironmentID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldDescription, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCode, v))
}

// TaxRateStatus applies equality check predicate on the "tax_rate_status" field. It's identical to TaxRateStatusEQ.
func TaxRateStatus(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTaxRateStatus, v))
}

// TaxRateType applies equality check predicate on the "tax_rate_type" field. It's identical to TaxRateTypeEQ.
func TaxRateType(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTaxRateType, v))
}

// Scope applies equality check predicate on the "scope" field. It's identical to ScopeEQ.
func Scope(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldScope, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCurrency, v))
}

// PercentageValue applies equality check predicate on the "percentage_value" field. It's identical to PercentageValueEQ.
func PercentageValue(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldPercentageValue, v))
}

// FixedValue applies equality check predicate on the "fixed_value" field. It's identical to FixedValueEQ.
func FixedValue(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldFixedValue, v))
}

// ValidFrom applies equality check predicate on the "valid_from" field. It's identical to ValidFromEQ.
func ValidFrom(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldValidFrom, v))
}

// ValidTo applies equality check predicate on the "valid_to" field. It's identical to ValidToEQ.
func ValidTo(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldValidTo, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldTenantID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// EnvironmentIDEQ applies the EQ predicate on the "environment_id" field.
func EnvironmentIDEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldEnvironmentID, v))
}

// EnvironmentIDNEQ applies the NEQ predicate on the "environment_id" field.
func EnvironmentIDNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldEnvironmentID, v))
}

// EnvironmentIDIn applies the In predicate on the "environment_id" field.
func EnvironmentIDIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDNotIn applies the NotIn predicate on the "environment_id" field.
func EnvironmentIDNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldEnvironmentID, vs...))
}

// EnvironmentIDGT applies the GT predicate on the "environment_id" field.
func EnvironmentIDGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldEnvironmentID, v))
}

// EnvironmentIDGTE applies the GTE predicate on the "environment_id" field.
func EnvironmentIDGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldEnvironmentID, v))
}

// EnvironmentIDLT applies the LT predicate on the "environment_id" field.
func EnvironmentIDLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldEnvironmentID, v))
}

// EnvironmentIDLTE applies the LTE predicate on the "environment_id" field.
func EnvironmentIDLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldEnvironmentID, v))
}

// EnvironmentIDContains applies the Contains predicate on the "environment_id" field.
func EnvironmentIDContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldEnvironmentID, v))
}

// EnvironmentIDHasPrefix applies the HasPrefix predicate on the "environment_id" field.
func EnvironmentIDHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldEnvironmentID, v))
}

// EnvironmentIDHasSuffix applies the HasSuffix predicate on the "environment_id" field.
func EnvironmentIDHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldEnvironmentID, v))
}

// EnvironmentIDIsNil applies the IsNil predicate on the "environment_id" field.
func EnvironmentIDIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldEnvironmentID))
}

// EnvironmentIDNotNil applies the NotNil predicate on the "environment_id" field.
func EnvironmentIDNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldEnvironmentID))
}

// EnvironmentIDEqualFold applies the EqualFold predicate on the "environment_id" field.
func EnvironmentIDEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldEnvironmentID, v))
}

// EnvironmentIDContainsFold applies the ContainsFold predicate on the "environment_id" field.
func EnvironmentIDContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldEnvironmentID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldDescription, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldCode, v))
}

// TaxRateStatusEQ applies the EQ predicate on the "tax_rate_status" field.
func TaxRateStatusEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTaxRateStatus, v))
}

// TaxRateStatusNEQ applies the NEQ predicate on the "tax_rate_status" field.
func TaxRateStatusNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldTaxRateStatus, v))
}

// TaxRateStatusIn applies the In predicate on the "tax_rate_status" field.
func TaxRateStatusIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldTaxRateStatus, vs...))
}

// TaxRateStatusNotIn applies the NotIn predicate on the "tax_rate_status" field.
func TaxRateStatusNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldTaxRateStatus, vs...))
}

// TaxRateStatusGT applies the GT predicate on the "tax_rate_status" field.
func TaxRateStatusGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldTaxRateStatus, v))
}

// TaxRateStatusGTE applies the GTE predicate on the "tax_rate_status" field.
func TaxRateStatusGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldTaxRateStatus, v))
}

// TaxRateStatusLT applies the LT predicate on the "tax_rate_status" field.
func TaxRateStatusLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldTaxRateStatus, v))
}

// TaxRateStatusLTE applies the LTE predicate on the "tax_rate_status" field.
func TaxRateStatusLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldTaxRateStatus, v))
}

// TaxRateStatusContains applies the Contains predicate on the "tax_rate_status" field.
func TaxRateStatusContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldTaxRateStatus, v))
}

// TaxRateStatusHasPrefix applies the HasPrefix predicate on the "tax_rate_status" field.
func TaxRateStatusHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldTaxRateStatus, v))
}

// TaxRateStatusHasSuffix applies the HasSuffix predicate on the "tax_rate_status" field.
func TaxRateStatusHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldTaxRateStatus, v))
}

// TaxRateStatusEqualFold applies the EqualFold predicate on the "tax_rate_status" field.
func TaxRateStatusEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldTaxRateStatus, v))
}

// TaxRateStatusContainsFold applies the ContainsFold predicate on the "tax_rate_status" field.
func TaxRateStatusContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldTaxRateStatus, v))
}

// TaxRateTypeEQ applies the EQ predicate on the "tax_rate_type" field.
func TaxRateTypeEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldTaxRateType, v))
}

// TaxRateTypeNEQ applies the NEQ predicate on the "tax_rate_type" field.
func TaxRateTypeNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldTaxRateType, v))
}

// TaxRateTypeIn applies the In predicate on the "tax_rate_type" field.
func TaxRateTypeIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldTaxRateType, vs...))
}

// TaxRateTypeNotIn applies the NotIn predicate on the "tax_rate_type" field.
func TaxRateTypeNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldTaxRateType, vs...))
}

// TaxRateTypeGT applies the GT predicate on the "tax_rate_type" field.
func TaxRateTypeGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldTaxRateType, v))
}

// TaxRateTypeGTE applies the GTE predicate on the "tax_rate_type" field.
func TaxRateTypeGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldTaxRateType, v))
}

// TaxRateTypeLT applies the LT predicate on the "tax_rate_type" field.
func TaxRateTypeLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldTaxRateType, v))
}

// TaxRateTypeLTE applies the LTE predicate on the "tax_rate_type" field.
func TaxRateTypeLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldTaxRateType, v))
}

// TaxRateTypeContains applies the Contains predicate on the "tax_rate_type" field.
func TaxRateTypeContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldTaxRateType, v))
}

// TaxRateTypeHasPrefix applies the HasPrefix predicate on the "tax_rate_type" field.
func TaxRateTypeHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldTaxRateType, v))
}

// TaxRateTypeHasSuffix applies the HasSuffix predicate on the "tax_rate_type" field.
func TaxRateTypeHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldTaxRateType, v))
}

// TaxRateTypeEqualFold applies the EqualFold predicate on the "tax_rate_type" field.
func TaxRateTypeEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldTaxRateType, v))
}

// TaxRateTypeContainsFold applies the ContainsFold predicate on the "tax_rate_type" field.
func TaxRateTypeContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldTaxRateType, v))
}

// ScopeEQ applies the EQ predicate on the "scope" field.
func ScopeEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldScope, v))
}

// ScopeNEQ applies the NEQ predicate on the "scope" field.
func ScopeNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldScope, v))
}

// ScopeIn applies the In predicate on the "scope" field.
func ScopeIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldScope, vs...))
}

// ScopeNotIn applies the NotIn predicate on the "scope" field.
func ScopeNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldScope, vs...))
}

// ScopeGT applies the GT predicate on the "scope" field.
func ScopeGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldScope, v))
}

// ScopeGTE applies the GTE predicate on the "scope" field.
func ScopeGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldScope, v))
}

// ScopeLT applies the LT predicate on the "scope" field.
func ScopeLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldScope, v))
}

// ScopeLTE applies the LTE predicate on the "scope" field.
func ScopeLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldScope, v))
}

// ScopeContains applies the Contains predicate on the "scope" field.
func ScopeContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldScope, v))
}

// ScopeHasPrefix applies the HasPrefix predicate on the "scope" field.
func ScopeHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldScope, v))
}

// ScopeHasSuffix applies the HasSuffix predicate on the "scope" field.
func ScopeHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldScope, v))
}

// ScopeEqualFold applies the EqualFold predicate on the "scope" field.
func ScopeEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldScope, v))
}

// ScopeContainsFold applies the ContainsFold predicate on the "scope" field.
func ScopeContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldScope, v))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldContainsFold(FieldCurrency, v))
}

// PercentageValueEQ applies the EQ predicate on the "percentage_value" field.
func PercentageValueEQ(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldPercentageValue, v))
}

// PercentageValueNEQ applies the NEQ predicate on the "percentage_value" field.
func PercentageValueNEQ(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldPercentageValue, v))
}

// PercentageValueIn applies the In predicate on the "percentage_value" field.
func PercentageValueIn(vs ...decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldPercentageValue, vs...))
}

// PercentageValueNotIn applies the NotIn predicate on the "percentage_value" field.
func PercentageValueNotIn(vs ...decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldPercentageValue, vs...))
}

// PercentageValueGT applies the GT predicate on the "percentage_value" field.
func PercentageValueGT(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldPercentageValue, v))
}

// PercentageValueGTE applies the GTE predicate on the "percentage_value" field.
func PercentageValueGTE(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldPercentageValue, v))
}

// PercentageValueLT applies the LT predicate on the "percentage_value" field.
func PercentageValueLT(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldPercentageValue, v))
}

// PercentageValueLTE applies the LTE predicate on the "percentage_value" field.
func PercentageValueLTE(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldPercentageValue, v))
}

// PercentageValueIsNil applies the IsNil predicate on the "percentage_value" field.
func PercentageValueIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldPercentageValue))
}

// PercentageValueNotNil applies the NotNil predicate on the "percentage_value" field.
func PercentageValueNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldPercentageValue))
}

// FixedValueEQ applies the EQ predicate on the "fixed_value" field.
func FixedValueEQ(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldFixedValue, v))
}

// FixedValueNEQ applies the NEQ predicate on the "fixed_value" field.
func FixedValueNEQ(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldFixedValue, v))
}

// FixedValueIn applies the In predicate on the "fixed_value" field.
func FixedValueIn(vs ...decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldFixedValue, vs...))
}

// FixedValueNotIn applies the NotIn predicate on the "fixed_value" field.
func FixedValueNotIn(vs ...decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldFixedValue, vs...))
}

// FixedValueGT applies the GT predicate on the "fixed_value" field.
func FixedValueGT(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldFixedValue, v))
}

// FixedValueGTE applies the GTE predicate on the "fixed_value" field.
func FixedValueGTE(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldFixedValue, v))
}

// FixedValueLT applies the LT predicate on the "fixed_value" field.
func FixedValueLT(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldFixedValue, v))
}

// FixedValueLTE applies the LTE predicate on the "fixed_value" field.
func FixedValueLTE(v decimal.Decimal) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldFixedValue, v))
}

// FixedValueIsNil applies the IsNil predicate on the "fixed_value" field.
func FixedValueIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldFixedValue))
}

// FixedValueNotNil applies the NotNil predicate on the "fixed_value" field.
func FixedValueNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldFixedValue))
}

// ValidFromEQ applies the EQ predicate on the "valid_from" field.
func ValidFromEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldValidFrom, v))
}

// ValidFromNEQ applies the NEQ predicate on the "valid_from" field.
func ValidFromNEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldValidFrom, v))
}

// ValidFromIn applies the In predicate on the "valid_from" field.
func ValidFromIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldValidFrom, vs...))
}

// ValidFromNotIn applies the NotIn predicate on the "valid_from" field.
func ValidFromNotIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldValidFrom, vs...))
}

// ValidFromGT applies the GT predicate on the "valid_from" field.
func ValidFromGT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldValidFrom, v))
}

// ValidFromGTE applies the GTE predicate on the "valid_from" field.
func ValidFromGTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldValidFrom, v))
}

// ValidFromLT applies the LT predicate on the "valid_from" field.
func ValidFromLT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldValidFrom, v))
}

// ValidFromLTE applies the LTE predicate on the "valid_from" field.
func ValidFromLTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldValidFrom, v))
}

// ValidFromIsNil applies the IsNil predicate on the "valid_from" field.
func ValidFromIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldValidFrom))
}

// ValidFromNotNil applies the NotNil predicate on the "valid_from" field.
func ValidFromNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldValidFrom))
}

// ValidToEQ applies the EQ predicate on the "valid_to" field.
func ValidToEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldEQ(FieldValidTo, v))
}

// ValidToNEQ applies the NEQ predicate on the "valid_to" field.
func ValidToNEQ(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNEQ(FieldValidTo, v))
}

// ValidToIn applies the In predicate on the "valid_to" field.
func ValidToIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIn(FieldValidTo, vs...))
}

// ValidToNotIn applies the NotIn predicate on the "valid_to" field.
func ValidToNotIn(vs ...time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotIn(FieldValidTo, vs...))
}

// ValidToGT applies the GT predicate on the "valid_to" field.
func ValidToGT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGT(FieldValidTo, v))
}

// ValidToGTE applies the GTE predicate on the "valid_to" field.
func ValidToGTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldGTE(FieldValidTo, v))
}

// ValidToLT applies the LT predicate on the "valid_to" field.
func ValidToLT(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLT(FieldValidTo, v))
}

// ValidToLTE applies the LTE predicate on the "valid_to" field.
func ValidToLTE(v time.Time) predicate.TaxRate {
	return predicate.TaxRate(sql.FieldLTE(FieldValidTo, v))
}

// ValidToIsNil applies the IsNil predicate on the "valid_to" field.
func ValidToIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldValidTo))
}

// ValidToNotNil applies the NotNil predicate on the "valid_to" field.
func ValidToNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldValidTo))
}

// MetadataIsNil applies the IsNil predicate on the "metadata" field.
func MetadataIsNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldIsNull(FieldMetadata))
}

// MetadataNotNil applies the NotNil predicate on the "metadata" field.
func MetadataNotNil() predicate.TaxRate {
	return predicate.TaxRate(sql.FieldNotNull(FieldMetadata))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TaxRate) predicate.TaxRate {
	return predicate.TaxRate(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TaxRate) predicate.TaxRate {
	return predicate.TaxRate(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TaxRate) predicate.TaxRate {
	return predicate.TaxRate(sql.NotPredicates(p))
}
